{"version":3,"sources":["constants/modelConstants.js","constants/modelProfileConstants.js","constants/userConstants.js","constants/paymentConstants.js","constants/subscriptionConstants.js","constants/paystackConstants.js","constants/carouselConstants.js","store.js","reducers/modelReducers.js","reducers/userReducers.js","reducers/paymentReducers.js","reducers/subscriptionReducers.js","reducers/paystackReducers.js","reducers/carouselReducers.js","components/SearchBox.js","actions/userActions.js","actions/modelActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Model.js","components/Message.js","components/Loader.js","components/Paginate.js","actions/carouselActions.js","screens/HomeScreen.js","screens/ModelScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/ModelLoginScreen.js","screens/RegisterScreen.js","screens/ModelRegisterScreen.js","screens/ModelRegisterScreen3.js","actions/subscriptionActions.js","screens/ProfileScreen.js","screens/ModelProfileScreen.js","actions/paymentActions.js","actions/paystackActions.js","screens/SubscriptionScreen.js","screens/PaymentScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ModelListScreen.js","screens/ModelAdminScreen.js","screens/ModelEditScreen.js","screens/ModelEditProfileScreen.js","screens/ModelEditImagesScreen.js","screens/AddPlanScreen.js","screens/PlanListScreen.js","screens/PlanEditScreen.js","screens/VerifyTransactionScreen.js","screens/CarouselListScreen.js","screens/AddCarouselScreen.js","screens/CarouselEditScreen.js","App.js","index.js"],"names":["MODEL_LIST_REQUEST","MODEL_LIST_SUCCESS","MODEL_LIST_FAIL","MODEL_ALL_REQUEST","MODEL_ALL_SUCCESS","MODEL_ALL_FAIL","MODEL_ALL_RESET","MODEL_DETAILS_REQUEST","MODEL_DETAILS_SUCCESS","MODEL_DETAILS_FAIL","MODEL_DETAILS_RESET","MODEL_LOGIN_REQUEST","MODEL_LOGIN_SUCCESS","MODEL_LOGIN_FAIL","MODEL_LOGOUT","MODEL_REGISTER_REQUEST","MODEL_REGISTER_SUCCESS","MODEL_REGISTER_FAIL","MODEL_UPDATE_PROFILE_RESET","MODEL_DELETE_REQUEST","MODEL_DELETE_SUCCESS","MODEL_DELETE_FAIL","MODEL_UPDATE_REQUEST","MODEL_UPDATE_SUCCESS","MODEL_UPDATE_FAIL","MODEL_UPDATE_RESET","MODEL_CREATE_REVIEW_REQUEST","MODEL_CREATE_REVIEW_SUCCESS","MODEL_CREATE_REVIEW_FAIL","MODEL_CREATE_REVIEW_RESET","MODEL_UPDATE_PROFILE_REQUEST","MODEL_UPDATE_PROFILE_SUCCESS","MODEL_UPDATE_PROFILE_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","USER_PAY_REQUEST","USER_PAY_SUCCESS","USER_PAY_FAIL","USER_PAY_RESET","USER_SUBSCRIBE_REQUEST","USER_SUBSCRIBE_SUCCESS","USER_SUBSCRIBE_FAIL","USER_SUBSCRIBE_RESET","ADMIN_CREATE_PLAN_REQUEST","ADMIN_CREATE_PLAN_SUCCESS","ADMIN_CREATE_PLAN_FAIL","ADMIN_UPDATE_PLAN_REQUEST","ADMIN_UPDATE_PLAN_SUCCESS","ADMIN_UPDATE_PLAN_FAIL","ADMIN_DELETE_PLAN_REQUEST","ADMIN_DELETE_PLAN_SUCCESS","ADMIN_DELETE_PLAN_FAIL","ADMIN_PLAN_DETAILS_REQUEST","ADMIN_PLAN_DETAILS_SUCCESS","ADMIN_PLAN_DETAILS_FAIL","PLAN_LIST_REQUEST","PLAN_LIST_SUCCESS","PLAN_LIST_FAIL","TRANSACTION_DETAILS_REQUEST","TRANSACTION_DETAILS_SUCCESS","TRANSACTION_DETAILS_FAIL","ADMIN_CREATE_SUB_REQUEST","ADMIN_CREATE_SUB_SUCCESS","ADMIN_CREATE_SUB_FAIL","ADMIN_ENABLE_SUB_REQUEST","ADMIN_ENABLE_SUB_SUCCESS","ADMIN_ENABLE_SUB_FAIL","ADMIN_DISABLE_SUB_REQUEST","ADMIN_DISABLE_SUB_SUCCESS","ADMIN_DISABLE_SUB_FAIL","SUB_DETAILS_REQUEST","SUB_DETAILS_SUCCESS","SUB_DETAILS_FAIL","SUB_LIST_REQUEST","SUB_LIST_SUCCESS","SUB_LIST_FAIL","PAYSTACK_KEYS_REQUEST","PAYSTACK_KEYS_SUCCESS","PAYSTACK_KEYS_FAIL","ADMIN_CREATE_CAROUSEL_REQUEST","ADMIN_CREATE_CAROUSEL_SUCCESS","ADMIN_CREATE_CAROUSEL_FAIL","ADMIN_UPDATE_CAROUSEL_REQUEST","ADMIN_UPDATE_CAROUSEL_SUCCESS","ADMIN_UPDATE_CAROUSEL_FAIL","ADMIN_DELETE_CAROUSEL_REQUEST","ADMIN_DELETE_CAROUSEL_SUCCESS","ADMIN_DELETE_CAROUSEL_FAIL","ADMIN_CAROUSEL_DETAILS_REQUEST","ADMIN_CAROUSEL_DETAILS_SUCCESS","ADMIN_CAROUSEL_DETAILS_FAIL","CAROUSEL_LIST_REQUEST","CAROUSEL_LIST_SUCCESS","CAROUSEL_LIST_FAIL","reducer","combineReducers","modelList","state","models","action","type","loading","payload","pages","page","error","modelAll","modelDetails","model","reviews","modelLogin","modelInfo","modelRegister","modelUpdateProfile","success","modelDelete","modelUpdate","modelReviewCreate","message","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","userPay","userSubscribe","planCreate","plan","planList","plans","planDelete","planDetails","planUpdate","verifyTransaction","details","subCreate","sub","subList","subs","subDetails","subEnable","subDisable","paystackKey","keys","carouselCreate","carousel","carouselList","carousels","carouselDelete","carouselDetails","carouselUpdate","initialState","localStorage","getItem","JSON","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","className","Button","variant","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","updateUser","patch","_id","isSubscribed","status","subCode","planCode","emailToken","reference","setItem","stringify","listModels","gender","verified","pageNumber","listModelDetails","getModelDetails","updateModelProfile","put","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","href","Toggle","aria-controls","Collapse","render","Nav","NavDropdown","title","Item","onClick","removeItem","username","Link","isAdmin","Footer","style","backgroundColor","color","Row","Col","Rating","text","defaultProps","Model","Card","minWidth","Img","src","profileImage","Body","Title","as","Text","rating","numReviews","city","country","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","Paginate","Pagination","Array","map","x","active","listCarousels","HomeScreen","match","filter","setFilter","params","heading","filterStatus","setFilterStatus","modelsList","setModelsList","signup","image","maleModelOfTheDay","undefined","femaleModelOfTheDay","length","highestRatedMaleModels","Math","max","highestRatedFemaleModels","floor","random","adminCarousels","i","Object","assign","buttonHandler","evt","useEffect","Carousel","interval","item","index","Image","alt","Caption","ButtonGroup","size","Group","md","controlId","CountryDropdown","priorityOptions","RegionDropdown","defaultOptionLabel","event","prevValues","toLowerCase","includes","fontFamily","sm","lg","xl","sourceType","screenName","options","ModelScreen","setRating","comment","setComment","successModelReview","errorModelReview","successReviewMessage","overlay","setOverlay","alert","textAlign","position","top","left","zIndex","border","fluid","marginRight","marginBottom","marginLeft","borderRadius","images","console","log","toUpperCase","DOB","about","states_visited_often","join","minCashGift","open_to_dinner_dates","privateImages","img","lineHeight","modelsPaidFor","find","phoneNumber1","phoneNumber2","whatsappNumber","ListGroup","review","createdAt","substring","modelId","post","Label","row","FormContainer","xs","LoginScreen","location","email","setEmail","password","setPassword","redirect","search","split","login","ModelLoginScreen","setUsername","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","attestation1","attestation2","attestation3","attestation4","newModel","setNewModel","handleChange","rows","val","Set","addToStatesVisited","readOnly","removeFromStatesVisited","RegisterScreen2","verificationImage","image1","image2","image3","image4","image5","privateImage1","privateImage2","upload","setUpload","uploadFileHandler","file","files","formData","FormData","append","File","label","custom","getSubDetails","disableSub","ProfileScreen","setUser","userDetail","successMessage","setSuccessMessage","prevValue","code","updateUserProfile","Check","checked","ModelProfileScreen","isVerified","listPlans","getPaystackKeys","SubscriptionScreen","selectedPlan","setPlan","pkey","setPkey","Date","getTime","amount","publicKey","onSuccess","getstate","createSub","customer","componentProps","onClose","choice","PaymentScreen","userId","modelUsername","UserListScreen","successDelete","deleteHandler","window","confirm","delete","deleteUser","Table","striped","bordered","hover","responsive","UserEditScreen","loadingUpdate","errorUpdate","successUpdate","handleCheck","m","el","ModelListScreen","loadingDelete","errorDelete","deleteModel","ModelAdminScreen","ModelEditScreen","modelID","setIsVerified","updateModel","ModelEditProfileScreen","passsword","ModelEditImagesScreen","AddPlanScreen","createPlan","PlanListScreen","then","deletePlan","currency","PlanEditScreen","planId","planDetail","updatePlan","VerifyTransactionScreen","referenceNumber","setReferenceNumber","verifyDetails","transaction_date","plan_code","ref","CarouselListScreen","deleteCarousel","AddCarouselScrren","setCarousel","createCarousel","CarouselEditScreen","carouselId","carouselDetail","updateCarousel","App","path","component","exact","ModelRegisterScreen","ModelRegisterScreen3","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8dba9fc5.chunk.js","sourcesContent":["export const MODEL_LIST_REQUEST = 'MODEL_LIST_REQUEST';\r\nexport const MODEL_LIST_SUCCESS = 'MODEL_LIST_SUCCESS';\r\nexport const MODEL_LIST_FAIL = 'MODEL_LIST_FAIL';\r\n\r\nexport const MODEL_ALL_REQUEST = 'MODEL_ALL_REQUEST';\r\nexport const MODEL_ALL_SUCCESS = 'MODEL_ALL_SUCCESS';\r\nexport const MODEL_ALL_FAIL = 'MODEL_ALL_FAIL';\r\nexport const MODEL_ALL_RESET = 'MODEL_ALL_RESET';\r\n\r\nexport const MODEL_DETAILS_REQUEST = 'MODEL_DETAILS_REQUEST';\r\nexport const MODEL_DETAILS_SUCCESS = 'MODEL_DETAILS_SUCCESS';\r\nexport const MODEL_DETAILS_FAIL = 'MODEL_DETAILS_FAIL';\r\nexport const MODEL_DETAILS_RESET = 'MODEL_DETAILS_RESET';\r\n\r\nexport const MODEL_LOGIN_REQUEST = 'MODEL_LOGIN_REQUEST';\r\nexport const MODEL_LOGIN_SUCCESS = 'MODEL_LOGIN_SUCCESS';\r\nexport const MODEL_LOGIN_FAIL = 'MODEL_LOGIN_FAIL';\r\nexport const MODEL_LOGOUT = 'MODEL_LOGOUT';\r\n\r\nexport const MODEL_REGISTER_REQUEST = 'MODEL_REGISTER_REQUEST';\r\nexport const MODEL_REGISTER_SUCCESS = 'MODEL_REGISTER_SUCCESS';\r\nexport const MODEL_REGISTER_FAIL = 'MODEL_REGISTER_FAIL';\r\n\r\nexport const MODEL_UPDATE_PROFILE_REQUEST = 'MODEL_UPDATE_PROFILE_REQUEST';\r\nexport const MODEL_UPDATE_PROFILE_SUCCESS = 'MODEL_UPDATE_PROFILE_SUCCESS';\r\nexport const MODEL_UPDATE_PROFILE_FAIL = 'MODEL_UPDATE_PROFILE_FAIL';\r\nexport const MODEL_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET';\r\n\r\nexport const MODEL_DELETE_REQUEST = 'MODEL_DELETE_REQUEST';\r\nexport const MODEL_DELETE_SUCCESS = 'MODEL_DELETE_SUCCESS';\r\nexport const MODEL_DELETE_FAIL = 'MODEL_DELETE_FAIL';\r\n\r\nexport const MODEL_UPDATE_REQUEST = 'MODEL_UPDATE_REQUEST';\r\nexport const MODEL_UPDATE_SUCCESS = 'MODEL_UPDATE_SUCCESS';\r\nexport const MODEL_UPDATE_FAIL = 'MODEL_UPDATE_FAIL';\r\nexport const MODEL_UPDATE_RESET = 'USER_UPDATE_RESET';\r\n\r\nexport const MODEL_CREATE_REVIEW_REQUEST = 'MODEL_CREATE_REVIEW_REQUEST';\r\nexport const MODEL_CREATE_REVIEW_SUCCESS = 'MODEL_CREATE_REVIEW_SUCCESS';\r\nexport const MODEL_CREATE_REVIEW_FAIL = 'MODEL_CREATE_REVIEW_FAIL';\r\nexport const MODEL_CREATE_REVIEW_RESET = 'MODEL_CREATE_REVIEW_RESET';\r\n","export const MODEL_UPDATE_PROFILE_REQUEST = 'MODEL_UPDATE_PROFILE_REQUEST';\r\nexport const MODEL_UPDATE_PROFILE_SUCCESS = 'MODEL_UPDATE_PROFILE_SUCCESS';\r\nexport const MODEL_UPDATE_PROFILE_FAIL = 'MODEL_UPDATE_PROFILE_FAIL';\r\nexport const MODEL_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET';\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL';\r\nexport const USER_LOGOUT = 'USER_LOGOUT';\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL';\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST';\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS';\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL';\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET';\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST';\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS';\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL';\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET';\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST';\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS';\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL';\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET';\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST';\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS';\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL';\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST';\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS';\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL';\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET';\r\n\r\nexport const USER_PAY_REQUEST = 'USER_PAY_REQUEST';\r\nexport const USER_PAY_SUCCESS = 'USER_PAY_SUCCESS';\r\nexport const USER_PAY_FAIL = 'USER_PAY_FAIL';\r\nexport const USER_PAY_RESET = 'USER_PAY_RESET';\r\n\r\nexport const USER_SUBSCRIBE_REQUEST = 'USER_SUBSCRIBE_REQUEST';\r\nexport const USER_SUBSCRIBE_SUCCESS = 'USER_SUBSCRIBE_SUCCESS';\r\nexport const USER_SUBSCRIBE_FAIL = 'USER_SUBSCRIBE_FAIL';\r\nexport const USER_SUBSCRIBE_RESET = 'USER_SUBSCRIBE_RESET';","export const ADMIN_CREATE_PLAN_REQUEST = \"ADMIN_CREATE_PLAN_REQUEST\";\r\nexport const ADMIN_CREATE_PLAN_SUCCESS = \"ADMIN_CREATE_PLAN_SUCCESS\";\r\nexport const ADMIN_CREATE_PLAN_FAIL = \"ADMIN_CREATE_PLAN_FAIL\";\r\n\r\nexport const ADMIN_UPDATE_PLAN_REQUEST = \"ADMIN_UPDATE_PLAN_REQUEST\";\r\nexport const ADMIN_UPDATE_PLAN_SUCCESS = \"ADMIN_UPDATE_PLAN_SUCCESS\";\r\nexport const ADMIN_UPDATE_PLAN_FAIL = \"ADMIN_UPDATE_PLAN_FAIL\";\r\n\r\nexport const ADMIN_DELETE_PLAN_REQUEST = \"ADMIN_DELETE_PLAN_REQUEST\";\r\nexport const ADMIN_DELETE_PLAN_SUCCESS = \"ADMIN_DELETE_PLAN_SUCCESS\";\r\nexport const ADMIN_DELETE_PLAN_FAIL = \"ADMIN_DELETE_PLAN_FAIL\";\r\n\r\nexport const ADMIN_PLAN_DETAILS_REQUEST = \"ADMIN_PLAN_DETAILS_REQUEST\";\r\nexport const ADMIN_PLAN_DETAILS_SUCCESS = \"ADMIN_PLAN_DETAILS_SUCCESS\";\r\nexport const ADMIN_PLAN_DETAILS_FAIL = \"ADMIN_PLAN_DETAILS_FAIL\";\r\n\r\nexport const PLAN_LIST_REQUEST = 'PLAN_LIST_REQUEST';\r\nexport const PLAN_LIST_SUCCESS = 'PLAN_LIST_SUCCESS';\r\nexport const PLAN_LIST_FAIL = 'PLAN_LIST_FAIL';\r\n\r\nexport const TRANSACTION_DETAILS_REQUEST = \"TRANSACTION_DETAILS_REQUEST\";\r\nexport const TRANSACTION_DETAILS_SUCCESS = \"TRANSACTION_DETAILS_SUCCESS\";\r\nexport const TRANSACTION_DETAILS_FAIL = \"TRANSACTION_DETAILS_FAIL\";","export const ADMIN_CREATE_SUB_REQUEST = \"ADMIN_CREATE_SUB_REQUEST\";\r\nexport const ADMIN_CREATE_SUB_SUCCESS = \"ADMIN_CREATE_SUB_SUCCESS\";\r\nexport const ADMIN_CREATE_SUB_FAIL = \"ADMIN_CREATE_SUB_FAIL\";\r\n\r\nexport const ADMIN_ENABLE_SUB_REQUEST = \"ADMIN_ENABLE_SUB_REQUEST\";\r\nexport const ADMIN_ENABLE_SUB_SUCCESS = \"ADMIN_ENABLE_SUB_SUCCESS\";\r\nexport const ADMIN_ENABLE_SUB_FAIL = \"ADMIN_ENABLE_SUB_FAIL\";\r\n\r\nexport const ADMIN_DISABLE_SUB_REQUEST = \"ADMIN_DISABLE_SUB_REQUEST\";\r\nexport const ADMIN_DISABLE_SUB_SUCCESS = \"ADMIN_DISABLE_SUB_SUCCESS\";\r\nexport const ADMIN_DISABLE_SUB_FAIL = \"ADMIN_DISABLE_SUB_FAIL\";\r\n\r\nexport const SUB_DETAILS_REQUEST = \"SUB_DETAILS_REQUEST\";\r\nexport const SUB_DETAILS_SUCCESS = \"SUB_DETAILS_SUCCESS\";\r\nexport const SUB_DETAILS_FAIL = \"SUB_DETAILS_FAIL\";\r\n\r\nexport const SUB_LIST_REQUEST = 'SUB_LIST_REQUEST';\r\nexport const SUB_LIST_SUCCESS = 'SUB_LIST_SUCCESS';\r\nexport const SUB_LIST_FAIL = 'SUB_LIST_FAIL';","export const PAYSTACK_KEYS_REQUEST = \"PAYSTACK_KEYS_REQUEST\";\r\nexport const PAYSTACK_KEYS_SUCCESS = \"PAYSTACK_KEYS_SUCCESS\";\r\nexport const PAYSTACK_KEYS_FAIL = \"PAYSTACK_KEYS_FAIL\";\r\nexport const PAYSTACK_KEYS_RESET = \"PAYSTACK_KEYS_RESET\";","export const ADMIN_CREATE_CAROUSEL_REQUEST = \"ADMIN_CREATE_CAROUSEL_REQUEST\";\r\nexport const ADMIN_CREATE_CAROUSEL_SUCCESS = \"ADMIN_CREATE_CAROUSEL_SUCCESS\";\r\nexport const ADMIN_CREATE_CAROUSEL_FAIL = \"ADMIN_CREATE_CAROUSEL_FAIL\";\r\n\r\nexport const ADMIN_UPDATE_CAROUSEL_REQUEST = \"ADMIN_UPDATE_CAROUSEL_REQUEST\";\r\nexport const ADMIN_UPDATE_CAROUSEL_SUCCESS = \"ADMIN_UPDATE_CAROUSEL_SUCCESS\";\r\nexport const ADMIN_UPDATE_CAROUSEL_FAIL = \"ADMIN_UPDATE_CAROUSEL_FAIL\";\r\n\r\nexport const ADMIN_DELETE_CAROUSEL_REQUEST = \"ADMIN_DELETE_CAROUSEL_REQUEST\";\r\nexport const ADMIN_DELETE_CAROUSEL_SUCCESS = \"ADMIN_DELETE_CAROUSEL_SUCCESS\";\r\nexport const ADMIN_DELETE_CAROUSEL_FAIL = \"ADMIN_DELETE_CAROUSEL_FAIL\";\r\n\r\nexport const ADMIN_CAROUSEL_DETAILS_REQUEST = \"ADMIN_CAROUSEL_DETAILS_REQUEST\";\r\nexport const ADMIN_CAROUSEL_DETAILS_SUCCESS = \"ADMIN_CAROUSEL_DETAILS_SUCCESS\";\r\nexport const ADMIN_CAROUSEL_DETAILS_FAIL = \"ADMIN_CAROUSEL_DETAILS_FAIL\";\r\n\r\nexport const CAROUSEL_LIST_REQUEST = 'CAROUSEL_LIST_REQUEST';\r\nexport const CAROUSEL_LIST_SUCCESS = 'CAROUSEL_LIST_SUCCESS';\r\nexport const CAROUSEL_LIST_FAIL = 'CAROUSEL_LIST_FAIL';","import { createStore, combineReducers, applyMiddleware } from \"redux\"; //createStore to create the store, applyMiddleware to be able to use thunks and other middlewares\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {\r\n  modelListReducer,\r\n  modelAllReducer,\r\n  modelDetailsReducer,\r\n  modelLoginReducer,\r\n  modelRegisterReducer,\r\n  modelUpdateProfileReducer,\r\n  modelDeleteReducer,\r\n  modelUpdateReducer,\r\n  modelReviewCreateReducer,\r\n} from \"./reducers/modelReducers\";\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n  userUpdateProfileReducer,\r\n  userListReducer,\r\n  userDeleteReducer,\r\n  userUpdateReducer,\r\n  userPayReducer,\r\n  userSubscribeReducer,\r\n} from \"./reducers/userReducers\";\r\nimport {\r\n  createPlanReducer,\r\n  planDeleteReducer,\r\n  planDetailsReducer,\r\n  planListReducer,\r\n  planUpdateReducer,\r\n  verifyTransactionReducer,\r\n} from \"./reducers/paymentReducers\";\r\nimport {\r\n  createSubReducer,\r\n  subDetailsReducer,\r\n  subDisableReducer,\r\n  subEnableReducer,\r\n  subListReducer,\r\n} from \"./reducers/subscriptionReducers\";\r\nimport { paystackKeysReducer } from \"./reducers/paystackReducers\";\r\nimport {\r\n  carouselDeleteReducer,\r\n  carouselDetailsReducer,\r\n  carouselListReducer,\r\n  carouselUpdateReducer,\r\n  createCarouselReducer,\r\n} from \"./reducers/carouselReducers\";\r\n\r\nconst reducer = combineReducers({\r\n  modelList: modelListReducer,\r\n  modelAll: modelAllReducer,\r\n  modelDetails: modelDetailsReducer,\r\n  modelLogin: modelLoginReducer,\r\n  modelRegister: modelRegisterReducer,\r\n  modelUpdateProfile: modelUpdateProfileReducer,\r\n  modelDelete: modelDeleteReducer,\r\n  modelUpdate: modelUpdateReducer,\r\n  modelReviewCreate: modelReviewCreateReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  userList: userListReducer,\r\n  userDelete: userDeleteReducer,\r\n  userUpdate: userUpdateReducer,\r\n  userPay: userPayReducer,\r\n  userSubscribe: userSubscribeReducer,\r\n  planCreate: createPlanReducer,\r\n  planList: planListReducer,\r\n  planDelete: planDeleteReducer,\r\n  planDetails: planDetailsReducer,\r\n  planUpdate: planUpdateReducer,\r\n  verifyTransaction: verifyTransactionReducer,\r\n  subCreate: createSubReducer,\r\n  subList: subListReducer,\r\n  subDetails: subDetailsReducer,\r\n  subEnable: subEnableReducer,\r\n  subDisable: subDisableReducer,\r\n  paystackKey: paystackKeysReducer,\r\n  carouselCreate: createCarouselReducer,\r\n  carouselList: carouselListReducer,\r\n  carouselDelete: carouselDeleteReducer,\r\n  carouselDetails: carouselDetailsReducer,\r\n  carouselUpdate: carouselUpdateReducer,\r\n});\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst modelInfoFromStorage = localStorage.getItem(\"modelInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"modelInfo\"))\r\n  : null;\r\n\r\nconst initialState = {\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n  modelLogin: { modelInfo: modelInfoFromStorage },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import {\r\n  MODEL_LIST_REQUEST,\r\n  MODEL_LIST_SUCCESS,\r\n  MODEL_LIST_FAIL,\r\n  MODEL_ALL_REQUEST,\r\n  MODEL_ALL_SUCCESS,\r\n  MODEL_ALL_FAIL,\r\n  MODEL_ALL_RESET,\r\n  MODEL_DETAILS_SUCCESS,\r\n  MODEL_DETAILS_REQUEST,\r\n  MODEL_DETAILS_FAIL,\r\n  MODEL_DETAILS_RESET,\r\n  MODEL_LOGIN_REQUEST,\r\n  MODEL_LOGIN_SUCCESS,\r\n  MODEL_LOGIN_FAIL,\r\n  MODEL_LOGOUT,\r\n  MODEL_REGISTER_REQUEST,\r\n  MODEL_REGISTER_SUCCESS,\r\n  MODEL_REGISTER_FAIL,\r\n  MODEL_DELETE_SUCCESS,\r\n  MODEL_DELETE_FAIL,\r\n  MODEL_DELETE_REQUEST,\r\n  MODEL_UPDATE_REQUEST,\r\n  MODEL_UPDATE_SUCCESS,\r\n  MODEL_UPDATE_FAIL,\r\n  MODEL_UPDATE_RESET,\r\n  MODEL_CREATE_REVIEW_SUCCESS,\r\n  MODEL_CREATE_REVIEW_FAIL,\r\n  MODEL_CREATE_REVIEW_RESET,\r\n  MODEL_CREATE_REVIEW_REQUEST,\r\n} from '../constants/modelConstants';\r\n\r\nimport {\r\n  MODEL_UPDATE_PROFILE_REQUEST,\r\n  MODEL_UPDATE_PROFILE_SUCCESS,\r\n  MODEL_UPDATE_PROFILE_FAIL,\r\n  MODEL_UPDATE_PROFILE_RESET,\r\n} from '../constants/modelProfileConstants';\r\n\r\nexport const modelListReducer = (state = { models: [] }, action) => {\r\n  switch (action.type) {\r\n    case MODEL_LIST_REQUEST:\r\n      return { loading: true, models: [] };\r\n    case MODEL_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        models: action.payload.models,\r\n        pages: action.payload.pages,\r\n        page: action.payload.page,\r\n      };\r\n    case MODEL_LIST_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const modelAllReducer = (state = { models: [] }, action) => {\r\n  switch (action.type) {\r\n    case MODEL_ALL_REQUEST:\r\n      return { loading: true };\r\n    case MODEL_ALL_SUCCESS:\r\n      return { loading: false, models: action.payload };\r\n    case MODEL_ALL_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case MODEL_ALL_RESET:\r\n      return { models: [] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const modelDetailsReducer = (\r\n  state = { model: { reviews: [] } },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case MODEL_DETAILS_REQUEST:\r\n      return { loading: true, ...state };\r\n    case MODEL_DETAILS_SUCCESS:\r\n      return { loading: false, model: action.payload };\r\n    case MODEL_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case MODEL_DETAILS_RESET:\r\n      return { model: {} };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const modelLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case MODEL_LOGIN_REQUEST:\r\n      return { loading: true };\r\n    case MODEL_LOGIN_SUCCESS:\r\n      return { loading: false, modelInfo: action.payload };\r\n    case MODEL_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case MODEL_LOGOUT:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const modelRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case MODEL_REGISTER_REQUEST:\r\n      return { loading: true };\r\n    case MODEL_REGISTER_SUCCESS:\r\n      return { loading: false, modelInfo: action.payload };\r\n    case MODEL_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// export const modelDetailsReducer = (state = { model: {} }, action) => {\r\n//   switch (action.type) {\r\n//     case MODEL_DETAILS_REQUEST:\r\n//       return { ...state, loading: true };\r\n//     case MODEL_DETAILS_SUCCESS:\r\n//       return { loading: false, model: action.payload };\r\n//     case MODEL_DETAILS_FAIL:\r\n//       return { loading: false, error: action.payload };\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nexport const modelUpdateProfileReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case MODEL_UPDATE_PROFILE_REQUEST:\r\n      return { loading: true };\r\n    case MODEL_UPDATE_PROFILE_SUCCESS:\r\n      return { loading: false, success: true, modelInfo: action.payload };\r\n    case MODEL_UPDATE_PROFILE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case MODEL_UPDATE_PROFILE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const modelDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case MODEL_DELETE_REQUEST:\r\n      return { loading: true };\r\n    case MODEL_DELETE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case MODEL_DELETE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const modelUpdateReducer = (state = { model: {} }, action) => {\r\n  switch (action.type) {\r\n    case MODEL_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case MODEL_UPDATE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case MODEL_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case MODEL_UPDATE_RESET:\r\n      return {\r\n        model: {},\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const modelReviewCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case MODEL_CREATE_REVIEW_REQUEST:\r\n      return { loading: true };\r\n    case MODEL_CREATE_REVIEW_SUCCESS:\r\n      return { loading: false, success: true, message: action.payload.message };\r\n    case MODEL_CREATE_REVIEW_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case MODEL_CREATE_REVIEW_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_RESET,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_RESET,\r\n  USER_LIST_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_RESET,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_RESET,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_PAY_SUCCESS,\r\n  USER_PAY_FAIL,\r\n  USER_PAY_RESET,\r\n  USER_PAY_REQUEST,\r\n  USER_SUBSCRIBE_REQUEST,\r\n  USER_SUBSCRIBE_SUCCESS,\r\n  USER_SUBSCRIBE_FAIL,\r\n  USER_SUBSCRIBE_RESET,\r\n} from \"../constants/userConstants\";\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true };\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_LOGOUT:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true };\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_DETAILS_REQUEST:\r\n      return { ...state, loading: true };\r\n    case USER_DETAILS_SUCCESS:\r\n      return { loading: false, user: action.payload };\r\n    case USER_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_DETAILS_RESET:\r\n      return { user: {} };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_PROFILE_REQUEST:\r\n      return { loading: true };\r\n    case USER_UPDATE_PROFILE_SUCCESS:\r\n      return { loading: false, success: true, userInfo: action.payload };\r\n    case USER_UPDATE_PROFILE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_UPDATE_PROFILE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n  switch (action.type) {\r\n    case USER_LIST_REQUEST:\r\n      return { loading: true };\r\n    case USER_LIST_SUCCESS:\r\n      return { loading: false, users: action.payload };\r\n    case USER_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_LIST_RESET:\r\n      return { users: [] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_DELETE_REQUEST:\r\n      return { loading: true };\r\n    case USER_DELETE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case USER_DELETE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case USER_UPDATE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case USER_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_UPDATE_RESET:\r\n      return {\r\n        user: {},\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userPayReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_PAY_REQUEST:\r\n      return { loading: true };\r\n    case USER_PAY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      };\r\n    case USER_PAY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case USER_PAY_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userSubscribeReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_SUBSCRIBE_REQUEST:\r\n      return { loading: true };\r\n    case USER_SUBSCRIBE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      };\r\n    case USER_SUBSCRIBE_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case USER_SUBSCRIBE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ADMIN_CREATE_PLAN_FAIL,\r\n  ADMIN_CREATE_PLAN_REQUEST,\r\n  ADMIN_CREATE_PLAN_SUCCESS,\r\n  ADMIN_UPDATE_PLAN_FAIL,\r\n  ADMIN_UPDATE_PLAN_REQUEST,\r\n  ADMIN_UPDATE_PLAN_SUCCESS,\r\n  ADMIN_DELETE_PLAN_FAIL,\r\n  ADMIN_DELETE_PLAN_REQUEST,\r\n  ADMIN_DELETE_PLAN_SUCCESS,\r\n  ADMIN_PLAN_DETAILS_FAIL,\r\n  ADMIN_PLAN_DETAILS_REQUEST,\r\n  ADMIN_PLAN_DETAILS_SUCCESS,\r\n  PLAN_LIST_FAIL,\r\n  PLAN_LIST_REQUEST,\r\n  PLAN_LIST_SUCCESS,\r\n  TRANSACTION_DETAILS_REQUEST,\r\n  TRANSACTION_DETAILS_SUCCESS,\r\n  TRANSACTION_DETAILS_FAIL,\r\n} from \"../constants/paymentConstants\";\r\n\r\nexport const createPlanReducer = (state = { plan: {} }, action) => {\r\n  switch (action.type) {\r\n    case ADMIN_CREATE_PLAN_REQUEST:\r\n      return { ...state, loading: true };\r\n    case ADMIN_CREATE_PLAN_SUCCESS:\r\n      return { loading: false, plan: action.payload };\r\n    case ADMIN_CREATE_PLAN_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const planListReducer = (state = { plans: [] }, action) => {\r\n  switch (action.type) {\r\n    case PLAN_LIST_REQUEST:\r\n      return { loading: true };\r\n    case PLAN_LIST_SUCCESS:\r\n      return { loading: false, plans: action.payload };\r\n    case PLAN_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const planDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ADMIN_DELETE_PLAN_REQUEST:\r\n      return { loading: true };\r\n    case ADMIN_DELETE_PLAN_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case ADMIN_DELETE_PLAN_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const planDetailsReducer = (state = { plan: {} }, action) => {\r\n  switch (action.type) {\r\n    case ADMIN_PLAN_DETAILS_REQUEST:\r\n      return { ...state, loading: true };\r\n    case ADMIN_PLAN_DETAILS_SUCCESS:\r\n      return { loading: false, plan: action.payload };\r\n    case ADMIN_PLAN_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const planUpdateReducer = (state = { plan: {} }, action) => {\r\n  switch (action.type) {\r\n    case ADMIN_UPDATE_PLAN_REQUEST:\r\n      return { loading: true };\r\n    case ADMIN_UPDATE_PLAN_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case ADMIN_UPDATE_PLAN_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const verifyTransactionReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case TRANSACTION_DETAILS_REQUEST:\r\n      return { loading: true };\r\n    case TRANSACTION_DETAILS_SUCCESS:\r\n      return { loading: false, details: action.payload };\r\n    case TRANSACTION_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ADMIN_CREATE_SUB_FAIL,\r\n  ADMIN_CREATE_SUB_REQUEST,\r\n  ADMIN_CREATE_SUB_SUCCESS,\r\n  ADMIN_DISABLE_SUB_FAIL,\r\n  ADMIN_DISABLE_SUB_REQUEST,\r\n  ADMIN_DISABLE_SUB_SUCCESS,\r\n  ADMIN_ENABLE_SUB_FAIL,\r\n  ADMIN_ENABLE_SUB_REQUEST,\r\n  ADMIN_ENABLE_SUB_SUCCESS,\r\n  SUB_DETAILS_FAIL,\r\n  SUB_DETAILS_REQUEST,\r\n  SUB_DETAILS_SUCCESS,\r\n  SUB_LIST_FAIL,\r\n  SUB_LIST_REQUEST,\r\n  SUB_LIST_SUCCESS,\r\n} from \"../constants/subscriptionConstants\";\r\n\r\nexport const createSubReducer = (state = { sub: {} }, action) => {\r\n  switch (action.type) {\r\n    case ADMIN_CREATE_SUB_REQUEST:\r\n      return { ...state, loading: true };\r\n    case ADMIN_CREATE_SUB_SUCCESS:\r\n      return { loading: false, sub: action.payload };\r\n    case ADMIN_CREATE_SUB_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const subListReducer = (state = { subs: [] }, action) => {\r\n  switch (action.type) {\r\n    case SUB_LIST_REQUEST:\r\n      return { loading: true };\r\n    case SUB_LIST_SUCCESS:\r\n      return { loading: false, subs: action.payload };\r\n    case SUB_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const subEnableReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ADMIN_ENABLE_SUB_REQUEST:\r\n      return { loading: true };\r\n    case ADMIN_ENABLE_SUB_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case ADMIN_ENABLE_SUB_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const subDisableReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ADMIN_DISABLE_SUB_REQUEST:\r\n      return { loading: true };\r\n    case ADMIN_DISABLE_SUB_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case ADMIN_DISABLE_SUB_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\nexport const subDetailsReducer = (state = { sub: {} }, action) => {\r\n    switch (action.type) {\r\n      case SUB_DETAILS_REQUEST:\r\n        return { ...state, loading: true };\r\n      case SUB_DETAILS_SUCCESS:\r\n        return { loading: false, sub: action.payload };\r\n      case SUB_DETAILS_FAIL:\r\n        return { loading: false, error: action.payload };\r\n      default:\r\n        return state;\r\n    }\r\n  };","import {\r\n  PAYSTACK_KEYS_REQUEST,\r\n  PAYSTACK_KEYS_SUCCESS,\r\n  PAYSTACK_KEYS_FAIL,\r\n} from \"../constants/paystackConstants\";\r\n\r\nexport const paystackKeysReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PAYSTACK_KEYS_REQUEST:\r\n      return { loading: true };\r\n    case PAYSTACK_KEYS_SUCCESS:\r\n      return { loading: false, keys: action.payload };\r\n    case PAYSTACK_KEYS_FAIL:\r\n      return { loading: false, keys: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n    ADMIN_CREATE_CAROUSEL_FAIL,\r\n    ADMIN_CREATE_CAROUSEL_REQUEST,\r\n    ADMIN_CREATE_CAROUSEL_SUCCESS,\r\n    ADMIN_CAROUSEL_DETAILS_FAIL,\r\n    ADMIN_CAROUSEL_DETAILS_REQUEST,\r\n    ADMIN_CAROUSEL_DETAILS_SUCCESS,\r\n    ADMIN_DELETE_CAROUSEL_FAIL,\r\n    ADMIN_DELETE_CAROUSEL_REQUEST,\r\n    ADMIN_DELETE_CAROUSEL_SUCCESS,\r\n    ADMIN_UPDATE_CAROUSEL_FAIL,\r\n    ADMIN_UPDATE_CAROUSEL_REQUEST,\r\n    ADMIN_UPDATE_CAROUSEL_SUCCESS,\r\n    CAROUSEL_LIST_FAIL,\r\n    CAROUSEL_LIST_REQUEST,\r\n    CAROUSEL_LIST_SUCCESS\r\n} from \"../constants/carouselConstants\";\r\n\r\nexport const createCarouselReducer = (state = { carousel: {} }, action) => {\r\n  switch (action.type) {\r\n    case ADMIN_CREATE_CAROUSEL_REQUEST:\r\n      return { ...state, loading: true };\r\n    case ADMIN_CREATE_CAROUSEL_SUCCESS:\r\n      return { loading: false, carousel: action.payload };\r\n    case ADMIN_CREATE_CAROUSEL_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const carouselListReducer = (state = { carousels: [] }, action) => {\r\n  switch (action.type) {\r\n    case CAROUSEL_LIST_REQUEST:\r\n      return { loading: true };\r\n    case CAROUSEL_LIST_SUCCESS:\r\n      return { loading: false, carousels: action.payload };\r\n    case CAROUSEL_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const carouselDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ADMIN_DELETE_CAROUSEL_REQUEST:\r\n      return { loading: true };\r\n    case ADMIN_DELETE_CAROUSEL_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case ADMIN_DELETE_CAROUSEL_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const carouselDetailsReducer = (state = { carousel: {} }, action) => {\r\n  switch (action.type) {\r\n    case ADMIN_CAROUSEL_DETAILS_REQUEST:\r\n      return { ...state, loading: true };\r\n    case ADMIN_CAROUSEL_DETAILS_SUCCESS:\r\n      return { loading: false, carousel: action.payload };\r\n    case ADMIN_CAROUSEL_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const carouselUpdateReducer = (state = { carousel: {} }, action) => {\r\n  switch (action.type) {\r\n    case ADMIN_UPDATE_CAROUSEL_REQUEST:\r\n      return { loading: true };\r\n    case ADMIN_UPDATE_CAROUSEL_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case ADMIN_UPDATE_CAROUSEL_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nconst SearchBox = ({ history }) => {\r\n  const [keyword, setKeyword] = useState('');\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (keyword.trim()) {\r\n      history.push(`/search/${keyword}`);\r\n    } else {\r\n      history.push('/');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={submitHandler} inline>\r\n      <Form.Control\r\n        type='text'\r\n        name='q'\r\n        onChange={(e) => setKeyword(e.target.value)}\r\n        placeholder='Search Models...'\r\n        className='mr-sm-2 ml-sm-5'\r\n      ></Form.Control>\r\n      <Button type='submit' variant='outline-success' className='p-2'>\r\n        Search\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import axios from \"axios\";\r\nimport {\r\n  USER_DELETE_FAIL,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_REQUEST,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_RESET,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_RESET,\r\n  USER_LIST_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_PAY_SUCCESS,\r\n  USER_PAY_FAIL,\r\n  USER_PAY_REQUEST,\r\n  USER_SUBSCRIBE_REQUEST,\r\n  USER_SUBSCRIBE_SUCCESS,\r\n  USER_SUBSCRIBE_FAIL,\r\n} from \"../constants/userConstants\";\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/users/login\",\r\n      { email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem(\"userInfo\");\r\n  dispatch({ type: USER_LOGOUT });\r\n  dispatch({ type: USER_DETAILS_RESET });\r\n  dispatch({ type: USER_LIST_RESET });\r\n};\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/users\",\r\n      { name, email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users/${id}`, config);\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/users/profile`, user, config);\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users`, config);\r\n\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/users/${id}`, config);\r\n\r\n    dispatch({ type: USER_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.patch(`/api/users/${user._id}`, user, config);\r\n\r\n    dispatch({ type: USER_UPDATE_SUCCESS });\r\n\r\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const userPay = (userId, modelUsername, reference) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_PAY_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/payment/${userId}/pay`,\r\n      {\r\n        model: { name: modelUsername, reference: reference.reference },\r\n        reference: reference.reference,\r\n      },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_PAY_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_PAY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const userSubscribe = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_SUBSCRIBE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const {\r\n      subCreate: { sub },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.patch(\r\n      `/api/payment/${id}/subscribe`,\r\n      {\r\n        isSubscribed: {\r\n          status: sub.status,\r\n          subCode: sub.subCode,\r\n          planCode: sub.planCode,\r\n          emailToken: sub.emailToken,\r\n          reference: sub.reference,\r\n        },\r\n      },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_SUBSCRIBE_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_SUBSCRIBE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n  MODEL_LIST_REQUEST,\r\n  MODEL_LIST_SUCCESS,\r\n  MODEL_LIST_FAIL,\r\n  MODEL_ALL_REQUEST,\r\n  MODEL_ALL_SUCCESS,\r\n  MODEL_ALL_FAIL,\r\n  MODEL_DETAILS_REQUEST,\r\n  MODEL_DETAILS_SUCCESS,\r\n  MODEL_DETAILS_FAIL,\r\n  MODEL_LOGIN_REQUEST,\r\n  MODEL_LOGIN_SUCCESS,\r\n  MODEL_LOGIN_FAIL,\r\n  MODEL_LOGOUT,\r\n  MODEL_REGISTER_REQUEST,\r\n  MODEL_REGISTER_SUCCESS,\r\n  MODEL_REGISTER_FAIL,\r\n  MODEL_DELETE_SUCCESS,\r\n  MODEL_DELETE_FAIL,\r\n  MODEL_DELETE_REQUEST,\r\n  MODEL_UPDATE_REQUEST,\r\n  MODEL_UPDATE_SUCCESS,\r\n  MODEL_UPDATE_FAIL,\r\n  MODEL_CREATE_REVIEW_SUCCESS,\r\n  MODEL_CREATE_REVIEW_FAIL,\r\n  MODEL_CREATE_REVIEW_REQUEST,\r\n} from '../constants/modelConstants';\r\n\r\nimport {\r\n  MODEL_UPDATE_PROFILE_REQUEST,\r\n  MODEL_UPDATE_PROFILE_SUCCESS,\r\n  MODEL_UPDATE_PROFILE_FAIL,\r\n} from '../constants/modelProfileConstants';\r\n\r\nexport const listModels = (\r\n  keyword = '',\r\n  gender = '',\r\n  verified = '',\r\n  pageNumber = ''\r\n) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: MODEL_LIST_REQUEST });\r\n\r\n    const { data } = await axios.get(\r\n      `/api/models?keyword=${keyword}&gender=${gender}&verified=${verified}&pageNumber=${pageNumber}`\r\n    );\r\n\r\n    dispatch({\r\n      type: MODEL_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: MODEL_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listAllModels = () => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: MODEL_ALL_REQUEST,\r\n    });\r\n\r\n    const { data } = await axios.get(`/api/models/all`);\r\n\r\n    dispatch({\r\n      type: MODEL_ALL_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: MODEL_ALL_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listModelDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: MODEL_DETAILS_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/models/${id}`);\r\n\r\n    dispatch({\r\n      type: MODEL_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: MODEL_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = (username, password) => async (dispatch) => {\r\n  //login with number or username or email\r\n  try {\r\n    dispatch({\r\n      type: MODEL_LOGIN_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      '/api/models/login',\r\n      { username, password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: MODEL_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem('modelInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: MODEL_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const modelLogout = () => (dispatch) => {\r\n  localStorage.removeItem('modelInfo');\r\n  dispatch({ type: MODEL_LOGOUT });\r\n};\r\n\r\nexport const register = (newModel) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: MODEL_REGISTER_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post('/api/models', newModel, config);\r\n\r\n    dispatch({\r\n      type: MODEL_REGISTER_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: MODEL_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem('modelInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: MODEL_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getModelDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: MODEL_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      modelLogin: { modelInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${modelInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/models/${id}`, config);\r\n\r\n    dispatch({\r\n      type: MODEL_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: MODEL_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateModelProfile = (model) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: MODEL_UPDATE_PROFILE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      modelLogin: { modelInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${modelInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/models/profile`, model, config);\r\n\r\n    dispatch({\r\n      type: MODEL_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: MODEL_UPDATE_PROFILE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteModel = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: MODEL_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/models/${id}`, config);\r\n\r\n    dispatch({\r\n      type: MODEL_DELETE_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: MODEL_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateModel = (model) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: MODEL_UPDATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/models/${model._id}`, model, config);\r\n\r\n    dispatch({ type: MODEL_UPDATE_SUCCESS });\r\n\r\n    dispatch({ type: MODEL_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: MODEL_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createModelReview = (modelId, review) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: MODEL_CREATE_REVIEW_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(`/api/models/${modelId}/reviews`, review, config);\r\n\r\n    dispatch({\r\n      type: MODEL_CREATE_REVIEW_SUCCESS,\r\n      payload: data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: MODEL_CREATE_REVIEW_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap';\r\nimport SearchBox from './SearchBox';\r\nimport { logout } from '../actions/userActions';\r\nimport { modelLogout } from '../actions/modelActions';\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const modelLogin = useSelector((state) => state.modelLogin);\r\n  const { modelInfo } = modelLogin;\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  const modelLogoutHandler = () => {\r\n    dispatch(modelLogout());\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <Navbar bg='dark' variant='dark' expand='lg' collapseOnSelect>\r\n        <Container>\r\n          <LinkContainer to='/'>\r\n            <Navbar.Brand href='/'>DinnerWithModels</Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n          <Navbar.Collapse id='basic-navbar-nav'>\r\n            <Route render={({ history }) => <SearchBox history={history} />} />\r\n            <Nav className='ml-auto'>\r\n              {userInfo ? (\r\n                <NavDropdown title={userInfo.name} id='username'>\r\n                  <LinkContainer to='/profile'>\r\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <NavDropdown.Item onClick={logoutHandler}>\r\n                    Logout\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              ) : modelInfo ? (\r\n                <NavDropdown title={modelInfo.username} id='username'>\r\n                  <LinkContainer to='/profile/model'>\r\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <NavDropdown.Item onClick={modelLogoutHandler}>\r\n                    Logout\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              ) : (\r\n                <LinkContainer to='/login'>\r\n                  <Nav.Link>\r\n                    <i className='fas fa-user'></i> Sign In\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n              {userInfo && userInfo.isAdmin && (\r\n                <NavDropdown title='Admin' id='adminmenu'>\r\n                  <LinkContainer to='/admin/userlist'>\r\n                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/modellist'>\r\n                    <NavDropdown.Item>Models</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/plans'>\r\n                    <NavDropdown.Item>Plans</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/verifyTransaction'>\r\n                    <NavDropdown.Item>Verify Transaction</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/carousel'>\r\n                    <NavDropdown.Item>Home Carousels</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  {/* <LinkContainer to='admin/orderlist'>\r\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                  </LinkContainer> */}\r\n                </NavDropdown>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer style={{ backgroundColor: '#343a40', color: 'white' }}>\r\n      <Container>\r\n        <Row>\r\n          <Col className='text-center py-3'>\r\n            Copyright &copy; DinnerWithModels |{' '}\r\n            <a href={'/'} style={{ color: 'white' }}>\r\n              legal\r\n            </a>{' '}\r\n            |{' '}\r\n            <a href={'/'} style={{ color: 'white' }}>\r\n              FAQ\r\n            </a>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className='text-center pb-3'>\r\n            Designed by{' '}\r\n            <a href={'https://www.oto.com.ng/'} style={{ color: 'white' }}>\r\n              Oto Effiong\r\n            </a>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n  return (\r\n    <div className='rating'>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 1\r\n              ? 'fas fa-star'\r\n              : value >= 0.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 2\r\n              ? 'fas fa-star'\r\n              : value >= 1.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 3\r\n              ? 'fas fa-star'\r\n              : value >= 2.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 4\r\n              ? 'fas fa-star'\r\n              : value >= 3.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 5\r\n              ? 'fas fa-star'\r\n              : value >= 4.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span className='review-number'>{text && text}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nRating.defaultProps = {\r\n  color: '#f8e825',\r\n};\r\n\r\nRating.propTypes = {\r\n  value: PropTypes.number.isRequired,\r\n  text: PropTypes.string,\r\n  color: PropTypes.string,\r\n};\r\n\r\nexport default Rating;\r\n","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport Rating from './Rating';\r\n\r\nconst Model = ({ model }) => {\r\n  return (\r\n    <Card\r\n      className='my-3 p-3 rounded'\r\n      style={{\r\n        minWidth: 200,\r\n      }}\r\n    >\r\n      <Link to={`/model/${model._id}`}>\r\n        <Card.Img src={model.profileImage} variant='top' />\r\n      </Link>\r\n\r\n      <Card.Body>\r\n        <Card.Title as='div'>\r\n          <Link to={`/model/${model._id}`}>\r\n            <strong>\r\n              <h4>{model.username}</h4>\r\n            </strong>\r\n          </Link>\r\n          <p className='top'>\r\n            Verified{' '}\r\n            <i className='fas fa-check-square' style={{ color: 'green' }}></i>\r\n          </p>\r\n        </Card.Title>\r\n\r\n        <Card.Text as='div'>\r\n          <Rating\r\n            value={model.rating}\r\n            text={`from ${model.numReviews} reviews`}\r\n          />\r\n        </Card.Text>\r\n\r\n        <Card.Text as='p'>\r\n          <strong>Gender: </strong>\r\n          {model.gender} <br></br>\r\n          <strong>Location: </strong>\r\n          {model.city}, {model.state}, {model.country}\r\n        </Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Model;\r\n","import React from 'react';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nconst Message = ({ variant, children }) => {\r\n  return <Alert variant={variant}>{children}</Alert>;\r\n};\r\n\r\nMessage.defaultProps = {\r\n  variant: 'info',\r\n};\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Spinner\r\n      animation='border'\r\n      role='status'\r\n      style={{\r\n        width: '100px',\r\n        height: '100px',\r\n        margin: 'auto',\r\n        display: 'block',\r\n      }}\r\n    >\r\n      <span className='sr-only'>Loading...</span>\r\n    </Spinner>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport { Pagination } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\r\n  return (\r\n    pages > 1 && (\r\n      <Pagination>\r\n        {[...Array(pages).keys()].map((x) => (\r\n          <LinkContainer\r\n            key={x + 1}\r\n            to={\r\n              !isAdmin\r\n                ? keyword\r\n                  ? `/search/${keyword}/page/${x + 1}`\r\n                  : `/page/${x + 1}`\r\n                : `/admin/productlist/${x + 1}`\r\n            }\r\n          >\r\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n          </LinkContainer>\r\n        ))}\r\n      </Pagination>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Paginate;\r\n","import axios from \"axios\";\r\nimport {\r\n  ADMIN_CREATE_CAROUSEL_FAIL,\r\n  ADMIN_CREATE_CAROUSEL_REQUEST,\r\n  ADMIN_CREATE_CAROUSEL_SUCCESS,\r\n  ADMIN_CAROUSEL_DETAILS_FAIL,\r\n  ADMIN_CAROUSEL_DETAILS_REQUEST,\r\n  ADMIN_CAROUSEL_DETAILS_SUCCESS,\r\n  ADMIN_DELETE_CAROUSEL_FAIL,\r\n  ADMIN_DELETE_CAROUSEL_REQUEST,\r\n  ADMIN_DELETE_CAROUSEL_SUCCESS,\r\n  ADMIN_UPDATE_CAROUSEL_FAIL,\r\n  ADMIN_UPDATE_CAROUSEL_REQUEST,\r\n  ADMIN_UPDATE_CAROUSEL_SUCCESS,\r\n  CAROUSEL_LIST_FAIL,\r\n  CAROUSEL_LIST_REQUEST,\r\n  CAROUSEL_LIST_SUCCESS,\r\n} from \"../constants/carouselConstants\";\r\n\r\nexport const createCarousel = (carousel) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ADMIN_CREATE_CAROUSEL_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\"/api/carousel\", carousel, config);\r\n\r\n    dispatch({\r\n      type: ADMIN_CREATE_CAROUSEL_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch(listCarousels());\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ADMIN_CREATE_CAROUSEL_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listCarousels = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: CAROUSEL_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(\"/api/carousel\", config);\r\n\r\n    dispatch({\r\n      type: CAROUSEL_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"carousels\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CAROUSEL_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteCarousel = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ADMIN_DELETE_CAROUSEL_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios\r\n      .delete(`/api/carousel/${id}`, config)\r\n      .then(() => dispatch(listCarousels()));\r\n\r\n    dispatch({ type: ADMIN_DELETE_CAROUSEL_SUCCESS });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ADMIN_DELETE_CAROUSEL_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getCarouselDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ADMIN_CAROUSEL_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/carousel/${id}`, config);\r\n\r\n    dispatch({\r\n      type: ADMIN_CAROUSEL_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ADMIN_CAROUSEL_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateCarousel = (carousel) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: ADMIN_UPDATE_CAROUSEL_REQUEST,\r\n      });\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n  \r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n  \r\n      await axios.patch(`/api/carousel/${carousel._id}`, carousel, config);\r\n  \r\n      dispatch({ type: ADMIN_UPDATE_CAROUSEL_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: ADMIN_UPDATE_CAROUSEL_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };","import React, { useEffect, useState } from 'react';\r\nimport { TwitterTimelineEmbed } from 'react-twitter-embed';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  Row,\r\n  Col,\r\n  ButtonGroup,\r\n  Button,\r\n  Carousel,\r\n  Image,\r\n  Form,\r\n} from 'react-bootstrap';\r\nimport Model from '../components/Model';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport Paginate from '../components/Paginate';\r\nimport { listModels } from '../actions/modelActions';\r\nimport { CountryDropdown, RegionDropdown } from 'react-country-region-selector';\r\nimport { Link } from 'react-router-dom';\r\nimport { listCarousels } from '../actions/carouselActions';\r\n\r\nconst HomeScreen = ({ match, history }) => {\r\n  const [filter, setFilter] = useState({\r\n    country: '',\r\n    state: '',\r\n    city: '',\r\n  });\r\n\r\n  const keyword = match.params.keyword;\r\n  const gender = match.params.gender;\r\n  const verified = 'true';\r\n  const heading =\r\n    gender === 'male'\r\n      ? 'Male Models'\r\n      : gender === 'female'\r\n      ? 'Female Models'\r\n      : 'All Models';\r\n\r\n  const pageNumber = match.params.pageNumber || 1;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const modelList = useSelector((state) => state.modelList);\r\n  const { loading, error, models, page, pages } = modelList;\r\n\r\n  const [filterStatus, setFilterStatus] = useState(false);\r\n  const [modelsList, setModelsList] = useState([]);\r\n\r\n  const carousel = {\r\n    signup: {\r\n      image: '/images/2.jpg',\r\n      text: (\r\n        <Link to='/register/model' className='btn btn-success'>\r\n          Sign up as a model\r\n        </Link>\r\n      ),\r\n    },\r\n    maleModelOfTheDay: undefined,\r\n    femaleModelOfTheDay: undefined,\r\n  };\r\n\r\n  if (models.length !== 0) {\r\n    const highestRatedMaleModels = [\r\n      ...models.filter(\r\n        (model) =>\r\n          model.gender === 'male' &&\r\n          model.rating ===\r\n            Math.max(\r\n              ...models\r\n                .filter((model) => model.gender === 'male')\r\n                .map((model) => model.rating)\r\n            )\r\n      ),\r\n    ];\r\n\r\n    const highestRatedFemaleModels = [\r\n      ...models.filter(\r\n        (model) =>\r\n          model.gender === 'female' &&\r\n          model.rating ===\r\n            Math.max(\r\n              ...models\r\n                .filter((model) => model.gender === 'female')\r\n                .map((model) => model.rating)\r\n            )\r\n      ),\r\n    ];\r\n\r\n    const maleModelOfTheDay =\r\n      highestRatedMaleModels[\r\n        Math.floor(Math.random() * highestRatedMaleModels.length)\r\n      ];\r\n    const femaleModelOfTheDay =\r\n      highestRatedFemaleModels[\r\n        Math.floor(Math.random() * highestRatedFemaleModels.length)\r\n      ];\r\n    if (maleModelOfTheDay !== undefined) {\r\n      carousel.maleModelOfTheDay = {\r\n        image: maleModelOfTheDay.profileImage,\r\n        text: (\r\n          <Link to={`/model/${maleModelOfTheDay._id}`}>\r\n            Male model of the day: {maleModelOfTheDay.username}\r\n          </Link>\r\n        ),\r\n      };\r\n    }\r\n    if (femaleModelOfTheDay !== undefined) {\r\n      carousel.femaleModelOfTheDay = {\r\n        image: femaleModelOfTheDay.profileImage,\r\n        text: (\r\n          <Link to={`/model/${femaleModelOfTheDay._id}`}>\r\n            Female model of the day: {femaleModelOfTheDay.username}\r\n          </Link>\r\n        ),\r\n      };\r\n    }\r\n  }\r\n\r\n  const carouselList = useSelector((state) => state.carouselList);\r\n  const { carousels } = carouselList;\r\n  const adminCarousels = {};\r\n  if (carousels && carousels.length !== 0) {\r\n    for (let i = 0; i < carousels.length; i++) {\r\n      adminCarousels[carousels[i].name] = {\r\n        image: carousels[i].image,\r\n        text: carousels[i].text,\r\n      };\r\n    }\r\n    Object.assign(carousel, adminCarousels);\r\n  }\r\n\r\n  const countryFilter = (value) => {\r\n    setFilter({ ...filter, country: value });\r\n    setModelsList([...models.filter((models) => models.country === value)]);\r\n    setFilterStatus(true);\r\n  };\r\n\r\n  const stateFilter = (value) => {\r\n    setFilter({ ...filter, state: value });\r\n    setModelsList([...modelsList.filter((models) => models.state === value)]);\r\n    setFilterStatus(true);\r\n  };\r\n\r\n  const cityFilter = (event) => {\r\n    const { name, value } = event.target;\r\n    setFilter((prevValues) => {\r\n      return { ...prevValues, [name]: value };\r\n    });\r\n    setModelsList([\r\n      ...modelsList.filter((models) =>\r\n        models.city.toLowerCase().includes(value)\r\n      ),\r\n    ]);\r\n    setFilterStatus(true);\r\n  };\r\n\r\n  const resetFilter = () => {\r\n    setFilterStatus(false);\r\n    setFilter({\r\n      country: '',\r\n      state: '',\r\n      city: '',\r\n    });\r\n  };\r\n\r\n  const buttonHandler = (evt) => {\r\n    // setHeading(evt.target.value);\r\n    if (evt.target.value === 'Female Models') {\r\n      history.push('/gender/female');\r\n    } else if (evt.target.value === 'Male Models') {\r\n      history.push('/gender/male');\r\n    } else {\r\n      history.push(`/`);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(listModels(keyword, gender, verified, pageNumber));\r\n    dispatch(listCarousels());\r\n    setFilterStatus(false);\r\n  }, [dispatch, keyword, gender, pageNumber]);\r\n\r\n  return (\r\n    <>\r\n      <Carousel interval={3000} className='home-carousel'>\r\n        {Object.keys(carousel)\r\n          .filter((item) => carousel[item] !== undefined)\r\n          .map((item, index) => (\r\n            <Carousel.Item key={index}>\r\n              {carousel[item].image && (\r\n                <Image\r\n                  src={carousel[item].image}\r\n                  className='d-block w-100'\r\n                  alt='carousel image'\r\n                />\r\n              )}\r\n              <Carousel.Caption>\r\n                <h4>{carousel[item].text}</h4>\r\n              </Carousel.Caption>\r\n            </Carousel.Item>\r\n          ))}\r\n      </Carousel>\r\n      <ButtonGroup size='sm' className='justify-content-md-center'>\r\n        <Button onClick={buttonHandler} value='All Models'>\r\n          All Models\r\n        </Button>\r\n        <Button onClick={buttonHandler} value='Male Models'>\r\n          Male Models\r\n        </Button>\r\n        <Button onClick={buttonHandler} value='Female Models'>\r\n          Female Models\r\n        </Button>\r\n      </ButtonGroup>\r\n      {gender && (\r\n        <div>\r\n          <br />\r\n\r\n          <Form>\r\n            <Form.Row>\r\n              <Form.Group as={Col} md='2' controlId='country'>\r\n                <Form.Control\r\n                  as={CountryDropdown}\r\n                  type='text'\r\n                  priorityOptions={['NGN']}\r\n                  placeholder='Select Country'\r\n                  name='country'\r\n                  value={filter.country}\r\n                  onChange={(country) => countryFilter(country)}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group as={Col} md='2' controlId='state'>\r\n                <Form.Control\r\n                  as={RegionDropdown}\r\n                  country={filter.country}\r\n                  type='text'\r\n                  defaultOptionLabel={'Select state'}\r\n                  name='state'\r\n                  value={filter.state}\r\n                  onChange={(state) => stateFilter(state)}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group as={Col} md='2' controlId='city'>\r\n                <Form.Control\r\n                  type='text'\r\n                  placeholder='City'\r\n                  name='city'\r\n                  value={filter.city}\r\n                  onChange={cityFilter}\r\n                />\r\n              </Form.Group>\r\n            </Form.Row>\r\n          </Form>\r\n          <Button onClick={resetFilter}>\r\n            <i className='fas fa-undo' style={{ color: 'white' }}></i>\r\n          </Button>\r\n        </div>\r\n      )}\r\n      <Row>\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <>\r\n            <Col md={9}>\r\n              <h1 style={{ fontFamily: 'Imbue' }}>{heading}</h1>\r\n              {!filterStatus ? (\r\n                models && models.length !== 0 ? (\r\n                  <Row>\r\n                    {models.map((model) => (\r\n                      <Col key={model._id} sm={12} md={6} lg={4} xl={4}>\r\n                        <Model model={model} />\r\n                      </Col>\r\n                    ))}\r\n                  </Row>\r\n                ) : (\r\n                  <h1 style={{ fontFamily: 'Imbue' }}>No models found :(</h1>\r\n                )\r\n              ) : modelsList && modelsList.length !== 0 ? (\r\n                <Row>\r\n                  {modelsList.map((model) => (\r\n                    <Col key={model._id} sm={12} md={6} lg={4} xl={4}>\r\n                      <Model model={model} />\r\n                    </Col>\r\n                  ))}\r\n                </Row>\r\n              ) : (\r\n                <h1 style={{ fontFamily: 'Imbue' }}>No models found :(</h1>\r\n              )}\r\n              <Paginate\r\n                pages={pages}\r\n                page={page}\r\n                keyword={keyword ? keyword : ''}\r\n              />\r\n            </Col>\r\n            <Col md={3}>\r\n              <TwitterTimelineEmbed\r\n                sourceType='profile'\r\n                screenName='dinnerwithmodel'\r\n                options={{ height: 600 }}\r\n              />\r\n            </Col>\r\n          </>\r\n        )}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  Button,\r\n  ListGroup,\r\n  Form,\r\n  Carousel,\r\n} from 'react-bootstrap';\r\nimport Rating from '../components/Rating';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { listModelDetails, createModelReview } from '../actions/modelActions';\r\nimport { MODEL_CREATE_REVIEW_RESET } from '../constants/modelConstants';\r\n\r\nconst ModelScreen = ({ match, history }) => {\r\n  const [rating, setRating] = useState(0);\r\n  const [comment, setComment] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const modelDetails = useSelector((state) => state.modelDetails);\r\n  const { loading, error, model } = modelDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const modelReviewCreate = useSelector((state) => state.modelReviewCreate);\r\n  const {\r\n    success: successModelReview,\r\n    error: errorModelReview,\r\n    message: successReviewMessage,\r\n  } = modelReviewCreate;\r\n\r\n  const [overlay, setOverlay] = useState({\r\n    src: '',\r\n    display: 'none',\r\n    status: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (successModelReview) {\r\n      alert('Review Submitted!');\r\n      setRating(0);\r\n      setComment('');\r\n      dispatch({ type: MODEL_CREATE_REVIEW_RESET });\r\n    }\r\n    dispatch(listModelDetails(match.params.id));\r\n  }, [match, dispatch, successModelReview]);\r\n\r\n  const subscriptionHandler = () => {\r\n    history.push('/login?redirect=subscribe');\r\n  };\r\n\r\n  const paymentHandler = () => {\r\n    history.push(`/login?redirect=pay/${model._id}`);\r\n  };\r\n\r\n  const overlayHandler = (value) => {\r\n    console.log('clicked', value);\r\n    setOverlay({ ...overlay, src: value, display: 'block', status: true });\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      createModelReview(match.params.id, {\r\n        rating,\r\n        comment,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {overlay.status ? (\r\n        <div\r\n          id='overlay'\r\n          onClick={() =>\r\n            setOverlay({ src: '', status: false, display: 'none' })\r\n          }\r\n          style={{\r\n            textAlign: 'center',\r\n            position: 'fixed',\r\n            top: 0,\r\n            left: 0,\r\n            width: '100%',\r\n            height: '100%',\r\n            zIndex: 10,\r\n            display: overlay.display,\r\n            backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n          }}\r\n        >\r\n          <Image\r\n            src={overlay.src}\r\n            alt={model.username}\r\n            style={{\r\n              // position: \"fixed\",\r\n              // top: 0,\r\n              // left: \"50%\",\r\n              border: '3px solid black',\r\n              margin: '5%',\r\n              // width: \"100%\",\r\n              height: '80%',\r\n              // zIndex: 10,\r\n              // display: overlay.display,\r\n            }}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <Link className='btn btn-light my-3' to='/'>\r\n            Go Back\r\n          </Link>\r\n          {loading ? (\r\n            <Loader />\r\n          ) : error ? (\r\n            <Message variant='danger'>{error}</Message>\r\n          ) : (\r\n            <>\r\n              <h2>{model.username}</h2>\r\n              <Row>\r\n                <Image\r\n                  src={model.profileImage}\r\n                  alt={model.username}\r\n                  fluid\r\n                  style={{\r\n                    height: 300,\r\n                    marginRight: 20,\r\n                    marginBottom: 20,\r\n                    marginLeft: 20,\r\n                    borderRadius: '20%',\r\n                  }}\r\n                />\r\n              </Row>\r\n              {model.images && model.images.length !== 0 && (\r\n                <Carousel interval={2000}>\r\n                  {model.images.map((image, index) => (\r\n                    <Carousel.Item key={index}>\r\n                      <Image\r\n                        onClick={() => overlayHandler(image)}\r\n                        src={image}\r\n                        className='d-block w-100'\r\n                        alt={`${model.username} image`}\r\n                      />\r\n                    </Carousel.Item>\r\n                  ))}\r\n                </Carousel>\r\n              )}\r\n              <h3 className='mt-3'>About Me:</h3>\r\n              <Rating\r\n                value={model.rating}\r\n                text={`from ${model.numReviews} reviews`}\r\n                className='pb-1'\r\n              />\r\n              <p>\r\n                <strong>\r\n                  {model.username && model.username.toUpperCase()} is a{' '}\r\n                  {model.gender} model from {model.city}, {model.state},{' '}\r\n                  {model.country}\r\n                </strong>\r\n              </p>\r\n              <p>\r\n                <strong>Date of bith:</strong> {model.DOB}\r\n              </p>\r\n              <p>{model.about}</p>\r\n              <p>\r\n                <strong>States visited often:</strong>\r\n                {model.states_visited_often &&\r\n                  model.states_visited_often.join(', ')}\r\n              </p>\r\n              <p>\r\n                <strong>Minimum cash gift:</strong> {model.minCashGift}\r\n              </p>\r\n              <p>\r\n                Open to dates with {model.open_to_dinner_dates}{' '}\r\n                {model.open_to_dinner_dates === 'Both' ? <>sexes</> : <>only</>}\r\n              </p>\r\n\r\n              <h3>Nude Pictures:</h3>\r\n              {userInfo &&\r\n              userInfo.isSubscribed &&\r\n              userInfo.isSubscribed.status === 'active' ? (\r\n                <Row\r\n                  style={{\r\n                    marginLeft: 20,\r\n                  }}\r\n                >\r\n                  {model.privateImages &&\r\n                    model.privateImages.map((img) => (\r\n                      <Image\r\n                        src={img}\r\n                        alt={model.username}\r\n                        fluid\r\n                        style={{\r\n                          height: '300px',\r\n                          marginRight: 20,\r\n                          marginBottom: 20,\r\n                        }}\r\n                      />\r\n                    ))}\r\n                </Row>\r\n              ) : (\r\n                <p>\r\n                  to unlock all private pictures on website for N10,000 monthly{' '}\r\n                  <Button\r\n                    type='button'\r\n                    className='btn'\r\n                    onClick={subscriptionHandler}\r\n                  >\r\n                    Click Here\r\n                  </Button>\r\n                </p>\r\n              )}\r\n\r\n              <h3\r\n                style={{\r\n                  lineHeight: '0',\r\n                }}\r\n              >\r\n                Contact Info\r\n              </h3>\r\n              {userInfo &&\r\n              userInfo.modelsPaidFor.find((x) => x.name === model.username) ? (\r\n                <>\r\n                  <p>Phone Number: {model.phoneNumber1}</p>\r\n                  {model.phoneNumber2 && (\r\n                    <p>Other Number: {model.phoneNumber2}</p>\r\n                  )}\r\n                  <p>Whatsapp Number: {model.whatsappNumber}</p>\r\n                </>\r\n              ) : (\r\n                <p\r\n                  style={{\r\n                    lineHeight: '1.5rem',\r\n                  }}\r\n                >\r\n                  To buy model's phone number for N5,000{' '}\r\n                  <Button\r\n                    type='button'\r\n                    className='btn'\r\n                    onClick={paymentHandler}\r\n                  >\r\n                    Click Here\r\n                  </Button>\r\n                </p>\r\n              )}\r\n\r\n              <Row>\r\n                <Col md={6}>\r\n                  <h3>Reviews</h3>\r\n                  {model.reviews.length === 0 && <Message>No Reviews</Message>}\r\n                  <ListGroup variant='flush'>\r\n                    {model.reviews.map((review) => (\r\n                      <ListGroup.Item key={review._id}>\r\n                        <strong>{review.name}</strong>\r\n                        <Rating value={review.rating} />\r\n                        <p>{review.createdAt.substring(0, 10)}</p>\r\n                        <p>{review.comment}</p>\r\n                      </ListGroup.Item>\r\n                    ))}\r\n                    <ListGroup.Item>\r\n                      <h3>Write a Review</h3>\r\n                      {errorModelReview && (\r\n                        <Message variant='danger'>{errorModelReview}</Message>\r\n                      )}\r\n                      {successReviewMessage && (\r\n                        <Message variant='success'>\r\n                          {successReviewMessage}\r\n                        </Message>\r\n                      )}\r\n                      {userInfo ? (\r\n                        <Form onSubmit={submitHandler}>\r\n                          <Form.Group controlId='rating'>\r\n                            <Form.Label>Rating</Form.Label>\r\n                            <Form.Control\r\n                              as='select'\r\n                              value={rating}\r\n                              onChange={(e) => setRating(e.target.value)}\r\n                            >\r\n                              <option value=''>Select...</option>\r\n                              <option value='1'>1 - Poor</option>\r\n                              <option value='2'>2 - Fair</option>\r\n                              <option value='3'>3 - Good</option>\r\n                              <option value='4'>4 - Very Good</option>\r\n                              <option value='5'>5 - Excellent</option>\r\n                            </Form.Control>\r\n                          </Form.Group>\r\n                          <Form.Group controlId='comment'>\r\n                            <Form.Label>Comment</Form.Label>\r\n                            <Form.Control\r\n                              as='textarea'\r\n                              row='3'\r\n                              value={comment}\r\n                              onChange={(e) => setComment(e.target.value)}\r\n                            ></Form.Control>\r\n                          </Form.Group>\r\n                          <Button type='submit' variant='primary'>\r\n                            Submit\r\n                          </Button>\r\n                        </Form>\r\n                      ) : (\r\n                        <Message>\r\n                          Please <Link to='/login'>sign in</Link> to write a\r\n                          review{' '}\r\n                        </Message>\r\n                      )}\r\n                    </ListGroup.Item>\r\n                  </ListGroup>\r\n                </Col>\r\n              </Row>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModelScreen;\r\n","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst FormContainer = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      <Row className='justify-content-md-center'>\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FormContainer;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { login } from '../actions/userActions';\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { loading, error, userInfo } = userLogin;\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/';\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(login(email, password));\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign In</h1>\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password Address</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Sign In\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className='py-3'>\r\n        <Col>\r\n          New Customer?{' '}\r\n          <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n            Register\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className='py-3'>\r\n        <Col>\r\n          <Link to={'login/model'}>Log in as model</Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { login } from '../actions/modelActions';\r\n\r\nconst ModelLoginScreen = ({ location, history }) => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const modelLogin = useSelector((state) => state.modelLogin);\r\n  const { loading, error, modelInfo } = modelLogin;\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/';\r\n\r\n  useEffect(() => {\r\n    if (modelInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, modelInfo, redirect]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(login(username, password));\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign In As Model</h1>\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='username'>\r\n          <Form.Label>Username</Form.Label>\r\n          <Form.Control\r\n            type='username'\r\n            placeholder='Enter username'\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Sign In\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className='py-3'>\r\n        <Col>\r\n          New Model? <Link to={'/register/model'}>Register</Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default ModelLoginScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { register } from '../actions/userActions';\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const { loading, error, userInfo } = userRegister;\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/';\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match');\r\n    } else {\r\n      dispatch(register(name, email, password));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign Up</h1>\r\n      {message && <Message variant='danger'>{message}</Message>}\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='name'>\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type='name'\r\n            placeholder='Enter name'\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password Address</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='confirmPassword'>\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Confirm password'\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Register\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className='py-3'>\r\n        <Col>\r\n          Have an Account?{' '}\r\n          <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n            Login\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className='py-3'>\r\n        <Col>\r\n          <Link to={'/register/model'}>Register as Model</Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { register } from \"../actions/modelActions\";\r\nimport { CountryDropdown, RegionDropdown } from \"react-country-region-selector\";\r\n\r\nconst RegisterScreen = ({ history }) => {\r\n  const [message, setMessage] = useState(null);\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const [newModel, setNewModel] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    gender: \"\",\r\n    country: \"\",\r\n    state: \"\",\r\n    city: \"\",\r\n    states_visited_often: \"\",\r\n    open_to_dinner_dates: \"\",\r\n    DOB: \"\",\r\n    about: \"\",\r\n    minCashGift: \"\",\r\n    phoneNumber1: \"\",\r\n    phoneNumber2: \"\",\r\n    whatsappNumber: \"\",\r\n    attestation1: \"\",\r\n    attestation2: \"\",\r\n    attestation3: \"\",\r\n    attestation4: \"\",\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const modelRegister = useSelector((state) => state.modelRegister);\r\n  const { loading, error, modelInfo } = modelRegister;\r\n\r\n  // const redirect = location.search ? location.search.split('=')[1] : '/';\r\n  useEffect(() => {\r\n    if (modelInfo) {\r\n      history.push(\"/register/model/3\");\r\n    }\r\n  }, [history, modelInfo]);\r\n\r\n  const handleChange = (evt) => {\r\n    setNewModel({\r\n      ...newModel,\r\n      [evt.target.name]: evt.target.value,\r\n    });\r\n    console.log(newModel);\r\n  };\r\n\r\n  const addToStatesVisited = (state) => {\r\n    setNewModel({\r\n      ...newModel,\r\n      states_visited_often: [\r\n        ...new Set([...newModel.states_visited_often, state]),\r\n      ],\r\n    });\r\n  };\r\n\r\n  const removeFromStatesVisited = (state) => {\r\n    setNewModel({\r\n      ...newModel,\r\n      states_visited_often: [\r\n        ...new Set([...newModel.states_visited_often, state]),\r\n      ].filter((value) => value !== state),\r\n    });\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (newModel.password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else {\r\n      dispatch(register(newModel));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign Up As Model</h1>\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <h2>Step 1: Personal details</h2>\r\n        <Message variant=\"warning\">\r\n          Ensure you start with a capital letter on all text fields\r\n        </Message>\r\n        <Form.Row>\r\n          <Form.Group as={Col} controlId=\"username\">\r\n            <Form.Label>Username</Form.Label>\r\n            <Form.Control\r\n              type=\"username\"\r\n              placeholder=\"Enter username\"\r\n              value={newModel.username}\r\n              name=\"username\"\r\n              onChange={handleChange}\r\n            ></Form.Control>\r\n            <Form.Text className=\"text-muted\">\r\n              Note: you won't be able to change your username in the future\r\n            </Form.Text>\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Col} controlId=\"email\">\r\n            <Form.Label>Email Address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              value={newModel.email}\r\n              name=\"email\"\r\n              onChange={handleChange}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n        </Form.Row>\r\n\r\n        <Form.Row>\r\n          <Form.Group as={Col} controlId=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"Enter password\"\r\n              value={newModel.password}\r\n              onChange={handleChange}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Col} controlId=\"confirmPassword\">\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Confirm password\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n        </Form.Row>\r\n\r\n        <Form.Row>\r\n          <Form.Group as={Col} md=\"6\" controlId=\"gender\">\r\n            <Form.Label>Gender</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              value={newModel.gender}\r\n              name=\"gender\"\r\n              onChange={handleChange}\r\n            >\r\n              <option>Choose...</option>\r\n              <option value=\"male\">male</option>\r\n              <option value=\"female\">female</option>\r\n            </Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Col} md=\"6\" controlId=\"DOB\">\r\n            <Form.Label>Date of birth</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"xx-xx-xxxx\"\r\n              name=\"DOB\"\r\n              value={newModel.DOB}\r\n              onChange={handleChange}\r\n            ></Form.Control>\r\n            <Form.Text className=\"text-muted\">Example: 03-03-1998</Form.Text>\r\n          </Form.Group>\r\n        </Form.Row>\r\n\r\n        <Form.Group controlId=\"about\">\r\n          <Form.Label>About you </Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Likes, dislikes, work/school, etc\"\r\n            name=\"about\"\r\n            value={newModel.about}\r\n            onChange={handleChange}\r\n            as=\"textarea\"\r\n            rows={3}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Row>\r\n          <Form.Group as={Col} md=\"4\" controlId=\"country\">\r\n            <Form.Label>Country</Form.Label>\r\n            <Form.Control\r\n              as={CountryDropdown}\r\n              type=\"text\"\r\n              priorityOptions={[\"NGN\"]}\r\n              placeholder=\"Country\"\r\n              name=\"country\"\r\n              value={newModel.country}\r\n              onChange={(val) => setNewModel({ ...newModel, country: val })}\r\n            />\r\n            <Form.Text className=\"text-muted\">Example: Nigeria</Form.Text>\r\n          </Form.Group>\r\n          <Form.Group as={Col} md=\"4\" controlId=\"state\">\r\n            <Form.Label>State</Form.Label>\r\n            <Form.Control\r\n              as={RegionDropdown}\r\n              country={newModel.country}\r\n              type=\"text\"\r\n              defaultOptionLabel={\"Select state\"}\r\n              placeholder=\"State\"\r\n              name=\"state\"\r\n              value={newModel.state}\r\n              onChange={(val) => setNewModel({ ...newModel, state: val })}\r\n            />\r\n            <Form.Text className=\"text-muted\">Example: Lagos</Form.Text>\r\n          </Form.Group>\r\n          <Form.Group as={Col} md=\"4\" controlId=\"city\">\r\n            <Form.Label>City</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"City\"\r\n              name=\"city\"\r\n              value={newModel.city}\r\n              onChange={handleChange}\r\n            />\r\n            <Form.Text className=\"text-muted\">Example: Ikeja</Form.Text>\r\n          </Form.Group>\r\n        </Form.Row>\r\n\r\n        <Form.Row>\r\n          <Form.Group as={Col} md=\"4\">\r\n            <Form.Label>States visited often</Form.Label>\r\n            <Form.Control\r\n              as={RegionDropdown}\r\n              country={newModel.country}\r\n              type=\"text\"\r\n              defaultOptionLabel={\"Add a State\"}\r\n              placeholder=\"States visited often\"\r\n              name=\"states_visited_often\"\r\n              onChange={(state) => addToStatesVisited(state)}\r\n            />\r\n            <Form.Text className=\"text-muted\">Example: Abuja</Form.Text>\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Col} md=\"4\">\r\n            <Form.Label>Selected States</Form.Label>\r\n            <Form.Control value={newModel.states_visited_often} readOnly />\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Col} md=\"4\">\r\n            <Form.Label>States visited often</Form.Label>\r\n            <Form.Control\r\n              as={RegionDropdown}\r\n              country={newModel.country}\r\n              type=\"text\"\r\n              defaultOptionLabel={\"Remove a State\"}\r\n              placeholder=\"States visited often\"\r\n              name=\"states_visited_often\"\r\n              onChange={(state) => removeFromStatesVisited(state)}\r\n            />\r\n            <Form.Text className=\"text-muted\">\r\n              Example: {newModel.states_visited_often[0]}\r\n            </Form.Text>\r\n          </Form.Group>\r\n        </Form.Row>\r\n\r\n        <Form.Group controlId=\"open_to_dinner_dates\">\r\n          <Form.Label>\r\n            Are you open to have dinner dates with everyone; both male & females\r\n          </Form.Label>\r\n          <Form.Control\r\n            as=\"select\"\r\n            name=\"open_to_dinner_dates\"\r\n            value={newModel.open_to_dinner_dates}\r\n            onChange={handleChange}\r\n          >\r\n            <option>Choose...</option>\r\n            <option value=\"Both\">Both</option>\r\n            <option value=\"Male\">Male only</option>\r\n            <option value=\"Female\">Female only</option>\r\n          </Form.Control>\r\n          <Form.Text className=\"text-muted\">\r\n            Please note, males are usually the ones who pay for anything with\r\n            you while females are usually the ones who want you for free\r\n          </Form.Text>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"minCashGift\">\r\n          <Form.Label>\r\n            As a model here, you can only accept cash gifts above what?\r\n          </Form.Label>\r\n          <Form.Control\r\n            type=\"number\"\r\n            placeholder=\"Minimum cash gift\"\r\n            name=\"minCashGift\"\r\n            value={newModel.minCashGift}\r\n            onChange={handleChange}\r\n          />\r\n          <Form.Text className=\"text-muted\">\r\n            Number only! For example: if the minimum you'll accept is N5,000\r\n            insert 5000\r\n          </Form.Text>\r\n        </Form.Group>\r\n\r\n        <h3>Private Information</h3>\r\n        <p>This would only be shared with people who can afford your time</p>\r\n\r\n        <Form.Group controlId=\"phoneNumber1\">\r\n          <Form.Label>Phone number 1</Form.Label>\r\n          <Form.Control\r\n            type=\"number\"\r\n            placeholder=\"phoneNumber1\"\r\n            name=\"phoneNumber1\"\r\n            value={newModel.phoneNumber1}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"phoneNumber2\">\r\n          <Form.Label>Phone number 2</Form.Label>\r\n          <Form.Control\r\n            type=\"number\"\r\n            placeholder=\"phoneNumber2\"\r\n            name=\"phoneNumber2\"\r\n            value={newModel.phoneNumber2}\r\n            onChange={handleChange}\r\n          />\r\n          <Form.Text className=\"text-muted\">leave blank if none</Form.Text>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"whatsappNumber\">\r\n          <Form.Label>Whatsapp number </Form.Label>\r\n          <Form.Control\r\n            type=\"number\"\r\n            placeholder=\"whatsappNumber\"\r\n            name=\"whatsappNumber\"\r\n            value={newModel.whatsappNumber}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n\r\n        <h3>Attestation</h3>\r\n        <Form.Group controlId=\"attestation1\">\r\n          <Form.Label>\r\n            As a model here, are you willing to have dinner dates and more with\r\n            people who contact you from this platform?\r\n          </Form.Label>\r\n          <Form.Control\r\n            as=\"select\"\r\n            name=\"attestation1\"\r\n            value={newModel.attestation1}\r\n            onChange={handleChange}\r\n          >\r\n            <option>Choose...</option>\r\n            <option value=\"Yes\">Yes</option>\r\n            <option value=\"No\">No</option>\r\n          </Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"attestation2\">\r\n          <Form.Label>\r\n            Are you giving us the permission to give your phone number to people\r\n            who find your picture attractive where they can have dinner dates\r\n            with you and more?\r\n          </Form.Label>\r\n          <Form.Control\r\n            as=\"select\"\r\n            name=\"attestation2\"\r\n            value={newModel.attestation2}\r\n            onChange={handleChange}\r\n          >\r\n            <option>Choose...</option>\r\n            <option value=\"Yes\">Yes</option>\r\n            <option value=\"No\">No</option>\r\n          </Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"attestation3\">\r\n          <Form.Label>\r\n            Do you understand that it is your job to keep yourself safe by\r\n            making a video call with someone who calls you to verify the person\r\n            is real and meeting in an open place as well as telling close\r\n            friends about your whereabout before going on a date?\r\n          </Form.Label>\r\n          <Form.Control\r\n            as=\"select\"\r\n            name=\"attestation3\"\r\n            value={newModel.attestation3}\r\n            onChange={handleChange}\r\n          >\r\n            <option>Choose...</option>\r\n            <option value=\"Yes\">Yes</option>\r\n            <option value=\"No\">No</option>\r\n          </Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"attestation4\">\r\n          <Form.Label>\r\n            Do you understand that as a model here, you are not supposed to take\r\n            things from people if they have not given them to you?\r\n          </Form.Label>\r\n          <Form.Control\r\n            as=\"select\"\r\n            name=\"attestation4\"\r\n            value={newModel.attestation4}\r\n            onChange={handleChange}\r\n          >\r\n            <option>Choose...</option>\r\n            <option value=\"Yes\">Yes</option>\r\n            <option value=\"No\">No</option>\r\n          </Form.Control>\r\n        </Form.Group>\r\n\r\n        {message && <Message variant=\"danger\">{message}</Message>}\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n        {loading && <Loader />}\r\n\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className=\"py-3\">\r\n        <Col>\r\n          Have an Account? <Link to={\"/login/model\"}>Login</Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","import axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { updateModelProfile } from '../actions/modelActions';\r\nimport {\r\n  MODEL_UPDATE_PROFILE_RESET,\r\n  MODEL_DETAILS_RESET,\r\n} from '../constants/modelConstants';\r\n\r\nconst RegisterScreen2 = ({ location, history }) => {\r\n  const modelLogin = useSelector((state) => state.modelLogin);\r\n  const { modelInfo } = modelLogin;\r\n\r\n  const modelUpdateProfile = useSelector((state) => state.modelUpdateProfile);\r\n  const { loading, success, error } = modelUpdateProfile;\r\n\r\n  const [upload, setUpload] = useState({\r\n    id: modelInfo._id,\r\n    profileImage: '',\r\n    verificationImage: '',\r\n    image1: '',\r\n    image2: '',\r\n    image3: '',\r\n    image4: '',\r\n    image5: '',\r\n    privateImage1: '',\r\n    privateImage2: '',\r\n  });\r\n\r\n  const newModel = {\r\n    images: [\r\n      upload.image1,\r\n      upload.image2,\r\n      upload.image3,\r\n      upload.image4,\r\n      upload.image5,\r\n    ],\r\n    privateImages: [upload.privateImage1, upload.privateImage2],\r\n    profileImage: upload.profileImage,\r\n    verificationImage: upload.verificationImage,\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      dispatch({ type: MODEL_UPDATE_PROFILE_RESET });\r\n      dispatch({ type: MODEL_DETAILS_RESET });\r\n      history.push('/');\r\n    }\r\n  }, [history, success, dispatch]);\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append('image', file);\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post('/api/upload', formData, config);\r\n\r\n      setUpload({\r\n        ...upload,\r\n        [e.target.name]: data,\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateModelProfile(newModel));\r\n    // history.push('/');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <FormContainer>\r\n          <h1>Step 3: Image uploads</h1>\r\n          {error && <Message variant='danger'>{error}</Message>}\r\n          {loading && <Loader />}\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>Profile picture</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                value={upload.profileImage}\r\n              ></Form.Control>\r\n              <Form.File\r\n                name='profileImage'\r\n                id='image-file'\r\n                label='Choose File'\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n              <Form.Text className='text-muted'>\r\n                Note: This is the picture that will be displayed in the home\r\n                page\r\n              </Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>Full picture of you standing</Form.Label>\r\n              <Form.Control type='text' value={upload.image1}></Form.Control>\r\n              <Form.File\r\n                id='image-file'\r\n                name='image1'\r\n                label='Choose File'\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>Full picture of you wearing clothes</Form.Label>\r\n              <Form.Control type='text' value={upload.image2}></Form.Control>\r\n              <Form.File\r\n                id='image-file'\r\n                name='image2'\r\n                label='Choose File'\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>Full picture of you shirtless</Form.Label>\r\n              <Form.Control type='text' value={upload.image3}></Form.Control>\r\n              <Form.File\r\n                name='image3'\r\n                id='image-file'\r\n                label='Choose File'\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>Random sexy pictures of you </Form.Label>\r\n              <Form.Control type='text' value={upload.image4}></Form.Control>\r\n              <Form.File\r\n                id='image-file'\r\n                name='image4'\r\n                label='Choose File'\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>Another random sexy pictures of you </Form.Label>\r\n              <Form.Control type='text' value={upload.image5}></Form.Control>\r\n              <Form.File\r\n                id='image-file'\r\n                name='image5'\r\n                label='Choose File'\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>Nude/semi nude picture of you 1</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                value={upload.privateImage1}\r\n              ></Form.Control>\r\n              <Form.File\r\n                id='image-file'\r\n                name='privateImage1'\r\n                label='Choose File'\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n              <Form.Text className='text-muted'>\r\n                Note: Don’t use fake nudes, we would catch you!\r\n              </Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>Nude/semi nude picture of you 2</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                value={upload.privateImage2}\r\n              ></Form.Control>\r\n              <Form.File\r\n                id='image-file'\r\n                name='privateImage2'\r\n                label='Choose File'\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n              <Form.Text className='text-muted'>\r\n                Note: Don’t use fake nudes, we would catch you!\r\n              </Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>Verified picture of you </Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                value={upload.verificationImage}\r\n              ></Form.Control>\r\n              <Form.File\r\n                id='image-file'\r\n                name='verificationImage'\r\n                label='Choose File'\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n              <Form.Text className='text-muted'>\r\n                write dinner with models on a paper and Take a selfie with it.\r\n                It would not be shared\r\n              </Form.Text>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Register\r\n            </Button>\r\n          </Form>\r\n        </FormContainer>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen2;\r\n","import axios from \"axios\";\r\nimport {\r\n  ADMIN_CREATE_SUB_FAIL,\r\n  ADMIN_CREATE_SUB_REQUEST,\r\n  ADMIN_CREATE_SUB_SUCCESS,\r\n  ADMIN_DISABLE_SUB_FAIL,\r\n  ADMIN_DISABLE_SUB_REQUEST,\r\n  ADMIN_DISABLE_SUB_SUCCESS,\r\n  SUB_DETAILS_FAIL,\r\n  SUB_DETAILS_REQUEST,\r\n  SUB_DETAILS_SUCCESS,\r\n  SUB_LIST_FAIL,\r\n  SUB_LIST_REQUEST,\r\n  SUB_LIST_SUCCESS,\r\n} from \"../constants/subscriptionConstants\";\r\nimport { updateUser, userSubscribe } from \"./userActions\";\r\n\r\nexport const createSub = (sub, user, reference) => async (\r\n  dispatch,\r\n  getstate\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: ADMIN_CREATE_SUB_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getstate();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      `/api/payment/subscriptions`,\r\n      { reference: reference.reference, user, sub },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ADMIN_CREATE_SUB_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch(userSubscribe(user._id));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ADMIN_CREATE_SUB_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listSubs = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: SUB_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/payment/subscriptions`, config);\r\n\r\n    dispatch({\r\n      type: SUB_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"subs\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: SUB_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getSubDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: SUB_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(\r\n      `/api/payment/subscriptions/${id}`,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: SUB_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"sub\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: SUB_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const disableSub = (sub, id, user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ADMIN_DISABLE_SUB_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.patch(\r\n      `/api/payment/subscriptions/${id}/disable`,\r\n      {sub},\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ADMIN_DISABLE_SUB_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"sub\", JSON.stringify(data));\r\n\r\n    dispatch(updateUser(user));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ADMIN_DISABLE_SUB_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions';\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants';\r\nimport { disableSub, getSubDetails } from '../actions/subscriptionActions';\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n  const [user, setUser] = useState({\r\n    _id: '',\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    isSubscribed: '',\r\n  });\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user: userDetail } = userDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { success } = userUpdateProfile;\r\n\r\n  const subDetails = useSelector((state) => state.subDetails);\r\n  const { sub } = subDetails;\r\n\r\n  const [successMessage, setSuccessMessage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login');\r\n    } else {\r\n      if (success) {\r\n        setSuccessMessage(success);\r\n      }\r\n      if (!userDetail || !userDetail.name || success) {\r\n        dispatch({ type: USER_UPDATE_PROFILE_RESET });\r\n        dispatch(getUserDetails(userInfo._id));\r\n      } else {\r\n        setUser({\r\n          ...user,\r\n          name: userDetail.name,\r\n          email: userDetail.email,\r\n          isSubscribed: userDetail.isSubscribed,\r\n          _id: userDetail._id,\r\n        });\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, userDetail, success]);\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setUser((prevValue) => {\r\n      return { ...prevValue, [name]: value };\r\n    });\r\n  };\r\n\r\n  const handleCheck = (event) => {\r\n    const { checked } = event.target;\r\n    setUser((prevValue) => {\r\n      return {\r\n        ...prevValue,\r\n        isSubscribed: {\r\n          ...userDetail.isSubscribed,\r\n          status: checked === true ? 'active' : 'inactive',\r\n        },\r\n      };\r\n    });\r\n    dispatch(getSubDetails(user.isSubscribed.subCode));\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    if (user.password !== user.confirmPassword) {\r\n      setMessage('Passwords do not match');\r\n    } else {\r\n      if (\r\n        userDetail.isSubscribed.status === 'active' &&\r\n        user.isSubscribed.status === 'inactive'\r\n      ) {\r\n        dispatch(\r\n          disableSub(\r\n            { code: sub.subCode, token: sub.emailToken },\r\n            sub._id,\r\n            user\r\n          )\r\n        );\r\n      }\r\n      dispatch(\r\n        updateUserProfile({\r\n          id: userDetail._id,\r\n          name: user.name,\r\n          email: user.email,\r\n          password: user.password,\r\n        })\r\n      );\r\n    }\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={12}>\r\n        <h2>User Profile</h2>\r\n        {message && <Message variant='danger'>{message}</Message>}\r\n        {error && <Message variant='danger'>{error}</Message>}\r\n        {successMessage && <Message variant='success'>Profile Updated</Message>}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group>\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              name='name'\r\n              placeholder='Enter name'\r\n              value={user.name}\r\n              onChange={handleChange}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Label>Email Address</Form.Label>\r\n            <Form.Control\r\n              type='email'\r\n              name='email'\r\n              placeholder='Enter email'\r\n              value={user.email}\r\n              onChange={handleChange}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              name='password'\r\n              placeholder='Enter password'\r\n              value={user.password}\r\n              onChange={handleChange}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              name='confirmPassword'\r\n              placeholder='Confirm password'\r\n              value={user.confirmPassword}\r\n              onChange={handleChange}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          {userDetail.isSubscribed &&\r\n            userDetail.isSubscribed.status === 'active' && (\r\n              <Form.Group>\r\n                <Message variant='warning'>\r\n                  Note: Subscription is automatically renewed every month To\r\n                  cancel auto renewal of monthly subscription, uncheck the box\r\n                  below\r\n                </Message>\r\n                <Form.Check\r\n                  type='checkbox'\r\n                  label='Auto Renewal?'\r\n                  checked={\r\n                    user.isSubscribed && user.isSubscribed.status === 'active'\r\n                      ? true\r\n                      : false\r\n                  }\r\n                  name='isSubscribed'\r\n                  onChange={handleCheck}\r\n                  value={user.isSubscribed}\r\n                ></Form.Check>\r\n              </Form.Group>\r\n            )}\r\n\r\n          <Button type='submit' variant='primary'>\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Image, ListGroup } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Rating from '../components/Rating';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { getModelDetails } from '../actions/modelActions';\r\n\r\nconst ModelProfileScreen = ({ location, history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const modelDetails = useSelector((state) => state.modelDetails);\r\n  const { loading, error, model } = modelDetails;\r\n  //   const id = model._id;\r\n\r\n  const modelLogin = useSelector((state) => state.modelLogin);\r\n  const { modelInfo } = modelLogin;\r\n\r\n  useEffect(() => {\r\n    if (!modelInfo) {\r\n      history.push('/login/model');\r\n    } else {\r\n      if (!model || !model.username) {\r\n        // dispatch({ type: MODEL_UPDATE_PROFILE_RESET });\r\n        dispatch(getModelDetails('profile'));\r\n      }\r\n    }\r\n  }, [dispatch, history, modelInfo, model]);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <h1>Model Profile</h1>\r\n          <Link\r\n            className='btn btn-success my-3 ml-auto'\r\n            to='/profile/model/edit'\r\n          >\r\n            Edit Profile\r\n          </Link>\r\n          <h2>{model.username}</h2>\r\n          {model.isVerified ? (\r\n            <Message>Profile is verified</Message>\r\n          ) : (\r\n            <>\r\n              <Message variant='danger'>Profile is not verified</Message>\r\n              <p>\r\n                Wait 3 days for profile to be verified. After 3 days, reach out\r\n                to the admin for guidance.\r\n              </p>\r\n            </>\r\n          )}\r\n          <h3>About Me</h3>\r\n          <p>{model.about}</p>\r\n          <p>Date of birth:{model.DOB}</p>\r\n          <p>\r\n            <strong>Location: </strong>\r\n            {model.city}, {model.state}, {model.country}{' '}\r\n          </p>\r\n          <p>Gender: {model.gender}</p>\r\n          <p>\r\n            States visited often:{' '}\r\n            {model.states_visited_often &&\r\n              model.states_visited_often.join(', ')}\r\n          </p>\r\n          <p>Minimum cash gift:{model.minCashGift}</p>\r\n          <p>\r\n            Open to dates with {model.open_to_dinner_dates}{' '}\r\n            {model.open_to_dinner_dates === 'Both' ? (\r\n              <span>sexes</span>\r\n            ) : (\r\n              <span>only</span>\r\n            )}\r\n          </p>\r\n          <h3>Private Info</h3>\r\n          <p>Email: {model.email}</p>\r\n          <p>Phone Number: {model.phoneNumber1}</p>\r\n          {model.phoneNumber2 && <p>Other Number: {model.phoneNumber2}</p>}\r\n          <p>Whatsapp Number: {model.whatsappNumber}</p>\r\n          <h3>Profile picture:</h3>\r\n          <Image\r\n            src={model.profileImage}\r\n            alt={model.name}\r\n            fluid\r\n            style={{ height: '300px', marginRight: 20, marginBottom: 20 }}\r\n          />\r\n          <h3>Other pictures:</h3>\r\n          <Row>\r\n            {model.images &&\r\n              model.images.map((img) => (\r\n                <Col md={3}>\r\n                  <Image\r\n                    src={img}\r\n                    alt={model.name}\r\n                    fluid\r\n                    style={{\r\n                      height: '300px',\r\n                      marginRight: 20,\r\n                      marginBottom: 20,\r\n                    }}\r\n                  />\r\n                </Col>\r\n              ))}\r\n          </Row>\r\n          <h3>Nude pictures:</h3>\r\n          <Row>\r\n            {model.privateImages &&\r\n              model.privateImages.map((img) => (\r\n                <Col md={3}>\r\n                  <Image\r\n                    src={img}\r\n                    alt={model.name}\r\n                    fluid\r\n                    style={{\r\n                      height: '300px',\r\n                      marginRight: 20,\r\n                      marginBottom: 20,\r\n                    }}\r\n                  />\r\n                </Col>\r\n              ))}\r\n          </Row>\r\n          <h3>Verification picture:</h3>\r\n          <Image\r\n            src={model.verificationImage}\r\n            alt={model.name}\r\n            fluid\r\n            style={{ height: '300px', marginRight: 20, marginBottom: 20 }}\r\n          />\r\n\r\n          <h3>Reviews</h3>\r\n          {model.reviews && model.reviews.length === 0 && (\r\n            <Message>No Reviews</Message>\r\n          )}\r\n          <ListGroup variant='flush'>\r\n            {model.reviews &&\r\n              model.reviews.map((review) => (\r\n                <ListGroup.Item key={review._id}>\r\n                  <strong>{review.name}</strong>\r\n                  <Rating value={review.rating} />\r\n                  <p>{review.createdAt.substring(0, 10)}</p>\r\n                  <p>{review.comment}</p>\r\n                </ListGroup.Item>\r\n              ))}\r\n          </ListGroup>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModelProfileScreen;\r\n","import axios from \"axios\";\r\nimport {\r\n  ADMIN_CREATE_PLAN_FAIL,\r\n  ADMIN_CREATE_PLAN_REQUEST,\r\n  ADMIN_CREATE_PLAN_SUCCESS,\r\n  PLAN_LIST_FAIL,\r\n  PLAN_LIST_REQUEST,\r\n  PLAN_LIST_SUCCESS,\r\n  ADMIN_DELETE_PLAN_FAIL,\r\n  ADMIN_DELETE_PLAN_REQUEST,\r\n  ADMIN_DELETE_PLAN_SUCCESS,\r\n  ADMIN_PLAN_DETAILS_FAIL,\r\n  ADMIN_PLAN_DETAILS_REQUEST,\r\n  ADMIN_PLAN_DETAILS_SUCCESS,\r\n  ADMIN_UPDATE_PLAN_FAIL,\r\n  ADMIN_UPDATE_PLAN_REQUEST,\r\n  ADMIN_UPDATE_PLAN_SUCCESS,\r\n  TRANSACTION_DETAILS_FAIL,\r\n  TRANSACTION_DETAILS_REQUEST,\r\n  TRANSACTION_DETAILS_SUCCESS,\r\n} from \"../constants/paymentConstants\";\r\n\r\nexport const createPlan = (plan) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ADMIN_CREATE_PLAN_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\"/api/payment/plans\", { plan }, config);\r\n\r\n    dispatch({\r\n      type: ADMIN_CREATE_PLAN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch(listPlans());\r\n\r\n    localStorage.setItem(\"plan\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ADMIN_CREATE_PLAN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listPlans = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PLAN_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/payment/plans`, config);\r\n\r\n    dispatch({\r\n      type: PLAN_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"plans\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PLAN_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deletePlan = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ADMIN_DELETE_PLAN_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios\r\n      .delete(`/api/payment/plans/${id}`, config)\r\n      .then(() => dispatch(listPlans()));\r\n\r\n    dispatch({ type: ADMIN_DELETE_PLAN_SUCCESS });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ADMIN_DELETE_PLAN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getPlanDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ADMIN_PLAN_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/payment/plans/${id}`, config);\r\n\r\n    dispatch({\r\n      type: ADMIN_PLAN_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ADMIN_PLAN_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updatePlan = (plan) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ADMIN_UPDATE_PLAN_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    await axios.patch(`/api/payment/plans/${plan._id}`, { plan }, config);\r\n\r\n    dispatch({ type: ADMIN_UPDATE_PLAN_SUCCESS });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ADMIN_UPDATE_PLAN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const verifyTransaction = (ref) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: TRANSACTION_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/payment/verify/${ref}`, config);\r\n\r\n    dispatch({\r\n      type: TRANSACTION_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: TRANSACTION_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import axios from \"axios\";\r\nimport {\r\n  PAYSTACK_KEYS_REQUEST,\r\n  PAYSTACK_KEYS_SUCCESS,\r\n  PAYSTACK_KEYS_FAIL,\r\n} from \"../constants/paystackConstants\";\r\n\r\nexport const getPaystackKeys = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PAYSTACK_KEYS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(\"/api/config/paystack\", config);\r\n\r\n    dispatch({\r\n      type: PAYSTACK_KEYS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PAYSTACK_KEYS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listPlans } from \"../actions/paymentActions\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport { PaystackButton } from \"react-paystack\";\r\nimport { createSub } from \"../actions/subscriptionActions\";\r\nimport { getPaystackKeys } from \"../actions/paystackActions\";\r\n\r\nconst SubscriptionScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo, loading, error } = userLogin;\r\n\r\n  const planList = useSelector((state) => state.planList);\r\n  const { plans } = planList;\r\n\r\n  const paystackKey = useSelector((state) => state.paystackKey);\r\n  const { keys } = paystackKey;\r\n\r\n  const [selectedPlan, setPlan] = useState({});\r\n  const [pkey, setPkey] = useState(null);\r\n\r\n  const config = {\r\n    reference: new Date().getTime(),\r\n    email: userInfo.email,\r\n    amount: selectedPlan && selectedPlan.amount,\r\n    publicKey: pkey,\r\n  };\r\n\r\n  const onSuccess = (reference) => {\r\n    dispatch(\r\n      createSub(\r\n        { customer: config.email, plan: selectedPlan.planCode },\r\n        userInfo,\r\n        reference\r\n      )\r\n    );\r\n    history.push(`/`);\r\n  };\r\n\r\n  const onClose = () => {\r\n    alert(\"Subscription Unsuccessful\");\r\n  };\r\n\r\n  const componentProps = {\r\n    ...config,\r\n    text: `Subscribe`,\r\n    onSuccess: (reference) => onSuccess(reference),\r\n    onClose: onClose,\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!plans || plans.length === 0) {\r\n      dispatch(listPlans());\r\n    }\r\n    if (!keys) {\r\n      dispatch(getPaystackKeys());\r\n    }\r\n    if (keys) {\r\n      setPkey(keys.publicKey);\r\n    }\r\n  }, [dispatch, plans, keys]);\r\n\r\n  const handleChange = (event) => {\r\n    const { value } = event.target;\r\n    const [choice] = plans.filter((plan) => plan.planCode === value);\r\n    setPlan(choice);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Link to=\"/admin/userlist\" className=\"btn btn-light my-3\">\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <div>\r\n            <Form>\r\n              <Form.Group>\r\n                <Form.Label>Choose a plan</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  name=\"plan\"\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value=\"\">Select Plan ...</option>\r\n                  {plans &&\r\n                    plans.map((plan) => {\r\n                      return (\r\n                        <option key={plan._id} value={plan.planCode}>\r\n                          {plan.name}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group>\r\n                <Form.Label>Plan Amount</Form.Label>\r\n                <Form.Control value={selectedPlan.amount / 100} readOnly></Form.Control>\r\n              </Form.Group>\r\n            </Form>\r\n            <PaystackButton\r\n              {...componentProps}\r\n              className=\"btn btn-success my-2 d-flex justify-content-center\"\r\n            />\r\n          </div>\r\n        )}\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubscriptionScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { PaystackButton } from \"react-paystack\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { listModelDetails } from \"../actions/modelActions\";\r\nimport { userPay } from \"../actions/userActions\";\r\nimport { getPaystackKeys } from \"../actions/paystackActions\";\r\n\r\nconst PaymentScreen = ({ match, history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const modelDetails = useSelector((state) => state.modelDetails);\r\n  const { loading, error, model } = modelDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const paystackKey = useSelector((state) => state.paystackKey);\r\n  const { keys } = paystackKey;\r\n\r\n  // const UserPay = useSelector((state) => state.UserPay);\r\n  // const { success: successPay } = UserPay;\r\n\r\n  const userId = userInfo._id;\r\n  const [pkey, setPkey] = useState(null);\r\n\r\n  const config = {\r\n    reference: new Date().getTime(),\r\n    email: userInfo.email,\r\n    amount: 500000,\r\n    publicKey: pkey,\r\n  };\r\n\r\n  const onSuccess = (reference) => {\r\n    // add model.username to users array\r\n    dispatch(userPay(userId, model.username, reference));\r\n    alert(\"Payment Successful\");\r\n    history.push(`/model/${model._id}`);\r\n  };\r\n\r\n  const onClose = () => {\r\n    alert(\"Payment Unsuccessful\");\r\n  };\r\n\r\n  const componentProps = {\r\n    ...config,\r\n    text: \"Pay Now\",\r\n    onSuccess: (reference) => onSuccess(reference),\r\n    onClose: onClose,\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(listModelDetails(match.params.id));\r\n    if (!keys) {\r\n      dispatch(getPaystackKeys());\r\n    }\r\n    if (keys) {\r\n      setPkey(keys.publicKey);\r\n    }\r\n  }, [match, dispatch, keys]);\r\n\r\n  return (\r\n    <FormContainer>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <>\r\n          <h3>Payment for {model.username}'s private information</h3>\r\n          <PaystackButton\r\n            {...componentProps}\r\n            className=\"btn btn-success my-2 d-flex justify-content-center\"\r\n          />\r\n          {/* <Message className='my-2'>\r\n            Please make sure you fill in the same Email Address used to sign up\r\n            and the model you want acces to\r\n          </Message> */}\r\n          {/* {successPay && (\r\n            <link to={`/model/${model._id}`}>\r\n              Go back to {model.username}'s profile\r\n            </link>\r\n          )} */}\r\n        </>\r\n      )}\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default PaymentScreen;\r\n","import React, { useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button, ListGroup } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { listUsers, deleteUser } from '../actions/userActions';\r\n\r\nconst UserListScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userList = useSelector((state) => state.userList);\r\n  const { loading, error, users } = userList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userDelete = useSelector((state) => state.userDelete);\r\n  const { success: successDelete } = userDelete;\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listUsers());\r\n    } else {\r\n      history.push('/login');\r\n    }\r\n  }, [dispatch, history, successDelete, userInfo]);\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure')) {\r\n      dispatch(deleteUser(id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Users</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>EMAIL</th>\r\n              <th>ADMIN</th>\r\n              <th>SUBSCRIBED</th>\r\n              <th>MODELS PAID FOR</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map((user) => (\r\n              <tr key={user._id}>\r\n                <td>{user._id}</td>\r\n                <td>{user.name}</td>\r\n                <td>\r\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                </td>\r\n                <td>\r\n                  {user.isAdmin ? (\r\n                    <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {user.isSubscribed && user.isSubscribed.status === \"active\" ? (\r\n                    <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <ListGroup variant='flush'>\r\n                    {user.modelsPaidFor.map((item, index) => (\r\n                      <ListGroup.Item key={index} item={item.name}>\r\n                        {item.name}\r\n                      </ListGroup.Item>\r\n                    ))}\r\n                  </ListGroup>\r\n                </td>\r\n                {/* <td>\r\n                  <ul>\r\n                    {user.modelsPaidFor.map((m) => {\r\n                      <li key={m}>{m}</li>;\r\n                    })}\r\n                    <li>vibes</li>\r\n                  </ul>\r\n                </td> */}\r\n                <td>\r\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                    <Button variant='light' className='btn-sm'>\r\n                      <i className='fas fa-edit'></i>\r\n                    </Button>\r\n                  </LinkContainer>\r\n                  <Button\r\n                    variant='danger'\r\n                    className='btn-sm'\r\n                    onClick={() => deleteHandler(user._id)}\r\n                  >\r\n                    <i className='fas fa-trash'></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserListScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { getUserDetails, updateUser } from \"../actions/userActions\";\r\nimport {\r\n  USER_UPDATE_RESET,\r\n  USER_DETAILS_RESET,\r\n} from \"../constants/userConstants\";\r\nimport { listAllModels } from \"../actions/modelActions\";\r\nimport { disableSub, getSubDetails } from \"../actions/subscriptionActions\";\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n  const userId = match.params.id;\r\n\r\n  const [user, setUser] = useState({\r\n    _id: \"\",\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    modelsPaidFor: [],\r\n    isSubscribed: \"\",\r\n    isAdmin: \"\",\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user: userDetail } = userDetails;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate;\r\n\r\n  const modelAll = useSelector((state) => state.modelAll);\r\n  const { models } = modelAll;\r\n\r\n  const subDetails = useSelector((state) => state.subDetails);\r\n  const { sub } = subDetails;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET });\r\n      dispatch({ type: USER_DETAILS_RESET });\r\n      history.push(\"/admin/userlist\");\r\n    } else {\r\n      if (!userDetail.name || userDetail._id !== userId) {\r\n        dispatch(getUserDetails(userId));\r\n        dispatch(listAllModels());\r\n      } else {\r\n        setUser({\r\n          ...user,\r\n          _id: userDetail._id,\r\n          name: userDetail.name,\r\n          email: userDetail.email,\r\n          modelsPaidFor: userDetail.modelsPaidFor,\r\n          isSubscribed: userDetail.isSubscribed,\r\n          isAdmin: userDetail.isAdmin,\r\n        });\r\n      }\r\n    }\r\n  }, [dispatch, history, userId, userDetail, successUpdate]);\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setUser((prevValue) => {\r\n      return { ...prevValue, [name]: value };\r\n    });\r\n  };\r\n  const handleCheck = (event) => {\r\n    const { name, checked } = event.target;\r\n    setUser((prevValue) => {\r\n      return {\r\n        ...prevValue,\r\n        [name]: checked,\r\n        isSubscribed: {\r\n          ...userDetail.isSubscribed,\r\n          status:\r\n            name !== \"isSubscribed\"\r\n              ? user.isSubscribed.status\r\n              : name === \"isSubscribed\" && checked === true\r\n              ? \"active\"\r\n              : \"inactive\",\r\n        },\r\n      };\r\n    });\r\n    dispatch(getSubDetails(user.isSubscribed.subCode));\r\n  };\r\n  const addToModelArray = (event) => {\r\n    const { name, value } = event.target;\r\n    setUser((prevValue) => {\r\n      return {\r\n        ...prevValue,\r\n        [name]: [...new Set([...prevValue.modelsPaidFor, {name: value}])],\r\n      };\r\n    });\r\n  };\r\n\r\n  const removeFromModelArray = (event) => {\r\n    const { name, value } = event.target;\r\n    setUser((prevValue) => {\r\n      return {\r\n        ...prevValue,\r\n        [name]: [...prevValue.modelsPaidFor].filter(\r\n          (el) => el.name !== value\r\n        ),\r\n      };\r\n    });\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    if (userDetail.isSubscribed.status === \"inactive\") {\r\n      dispatch(updateUser(user));\r\n    } else if (\r\n      userDetail.isSubscribed.status === \"active\" &&\r\n      user.isSubscribed.status === \"inactive\"\r\n    ) {\r\n      dispatch(\r\n        disableSub({ code: sub.subCode, token: sub.emailToken }, sub._id, user)\r\n      );\r\n    }\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Link to=\"/admin/userlist\" className=\"btn btn-light my-3\">\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <Form>\r\n            <Form.Group>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"name\"\r\n                placeholder=\"Enter name\"\r\n                value={user.name}\r\n                onChange={handleChange}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"Enter email\"\r\n                value={user.email}\r\n                onChange={handleChange}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                name=\"password\"\r\n                placeholder=\"Enter password\"\r\n                value={user.password}\r\n                onChange={handleChange}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Row>\r\n              <Form.Group as={Col}>\r\n                <Form.Label>Add to Models Paid For</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  name=\"modelsPaidFor\"\r\n                  onChange={addToModelArray}\r\n                >\r\n                  <option value=\"\">Select Models ...</option>\r\n                  {models &&\r\n                    models\r\n                      .filter(\r\n                        (model) => !user.modelsPaidFor.find((m) => m.name === model.username)\r\n                      )\r\n                      .map((model) => {\r\n                        return (\r\n                          <option key={model._id} value={model.name}>\r\n                            {model.username}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col}>\r\n                <Form.Label>Remove from Models Paid For</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  name=\"modelsPaidFor\"\r\n                  onChange={removeFromModelArray}\r\n                >\r\n                  <option value=\"\">Select Models Paid For ...</option>\r\n                  {models &&\r\n                    models\r\n                      .filter((model) => user.modelsPaidFor.find((m) => m.name ===model.username))\r\n                      .map((model) => {\r\n                        return (\r\n                          <option key={model._id} value={model.name}>\r\n                            {model.username}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Group>\r\n              <Form.Label>Models Paid For</Form.Label>\r\n              <Form.Control value={user.modelsPaidFor.map((m) => m.name)} readOnly></Form.Control>\r\n            </Form.Group>\r\n\r\n            {userDetail.isSubscribed && userDetail.isSubscribed.status === \"active\" && (\r\n              <Form.Group>\r\n                <Form.Check\r\n                  type=\"checkbox\"\r\n                  label=\"Is Subscribed\"\r\n                  checked={\r\n                    user.isSubscribed && user.isSubscribed.status === \"active\"\r\n                      ? true\r\n                      : false\r\n                  }\r\n                  name=\"isSubscribed\"\r\n                  onChange={handleCheck}\r\n                  value={user.isSubscribed}\r\n                ></Form.Check>\r\n              </Form.Group>\r\n            )}\r\n\r\n            <Form.Group>\r\n              <Form.Check\r\n                type=\"checkbox\"\r\n                label=\"Is Admin\"\r\n                checked={user.isAdmin}\r\n                name=\"isAdmin\"\r\n                onChange={handleCheck}\r\n                value={user.isAdmin}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" variant=\"primary\" onClick={submitHandler}>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserEditScreen;\r\n","import React, { useEffect } from 'react';\r\nimport Paginate from '../components/Paginate';\r\nimport { Link } from 'react-router-dom';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { listModels, deleteModel } from '../actions/modelActions';\r\n\r\nconst ModelListScreen = ({ history, match }) => {\r\n  const pageNumber = match.params.pageNumber || 1;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const modelList = useSelector((state) => state.modelList);\r\n  const { loading, error, models, page, pages } = modelList;\r\n\r\n  const modelDelete = useSelector((state) => state.modelDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = modelDelete;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listModels('', '', '', pageNumber));\r\n    } else {\r\n      history.push('/login');\r\n    }\r\n  }, [dispatch, history, userInfo, successDelete, pageNumber]);\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure')) {\r\n      dispatch(deleteModel(id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className='align-items-center'>\r\n        <Col>\r\n          <h1>Models</h1>\r\n        </Col>\r\n      </Row>\r\n      {loadingDelete && <Loader />}\r\n      {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>NAME</th>\r\n                <th>GENDER</th>\r\n                <th>STATE</th>\r\n                <th>VERIFIED</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {models.map((model) => (\r\n                <tr key={model._id}>\r\n                  <td>\r\n                    <Link to={`/admin/model/${model._id}`}>{model._id}</Link>\r\n                  </td>\r\n                  <td>{model.username}</td>\r\n                  <td>{model.gender}</td>\r\n                  <td>{model.state}</td>\r\n                  <td>\r\n                    {model.isVerified ? (\r\n                      <i\r\n                        className='fas fa-check'\r\n                        style={{ color: 'green' }}\r\n                      ></i>\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`/admin/model/${model._id}/edit`}>\r\n                      <Button variant='light' className='btn-sm'>\r\n                        <i className='fas fa-edit'></i>\r\n                      </Button>\r\n                    </LinkContainer>\r\n                    <Button\r\n                      variant='danger'\r\n                      className='btn-sm'\r\n                      onClick={() => deleteHandler(model._id)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n          <Paginate pages={pages} page={page} isAdmin={true} />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModelListScreen;\r\n","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Image, ListGroup } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Rating from '../components/Rating';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { listModelDetails } from '../actions/modelActions';\r\n\r\nconst ModelAdminScreen = ({ history, match }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const modelDetails = useSelector((state) => state.modelDetails);\r\n  const { loading, error, model } = modelDetails;\r\n  //   const id = model._id;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo.isAdmin) {\r\n      history.push('/login/model');\r\n    } else {\r\n      if (!model || !model.username || model._id !== match.params.id) {\r\n        // dispatch({ type: MODEL_UPDATE_PROFILE_RESET });\r\n        dispatch(listModelDetails(match.params.id));\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo.isAdmin, model, match.params.id]);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Link className='btn btn-light my-3' to='/admin/modellist'>\r\n            Go Back\r\n          </Link>\r\n          <h1>Model Profile</h1>\r\n          <Link\r\n            className='btn btn-success my-3 ml-auto'\r\n            to={`/admin/model/${model._id}/edit`}\r\n          >\r\n            Edit Profile\r\n          </Link>\r\n          <h2>{model.username}</h2>\r\n          {model.isVerified ? (\r\n            <Message>Profile is verified</Message>\r\n          ) : (\r\n            <>\r\n              <Message variant='danger'>Profile is not verified</Message>\r\n            </>\r\n          )}\r\n          <h3>About Me</h3>\r\n          <p>{model.about}</p>\r\n          <p>Date of birth:{model.DOB}</p>\r\n          <p>\r\n            <strong>Location: </strong>\r\n            {model.city}, {model.state}, {model.country}{' '}\r\n          </p>\r\n          <p>Gender: {model.gender}</p>\r\n          <p>States visited often: {model.states_visited_often}</p>\r\n          <p>Minimum cash gift:{model.minCashGift}</p>\r\n          <p>\r\n            Open to dates with {model.open_to_dinner_dates}{' '}\r\n            {model.open_to_dinner_dates === 'Both' ? (\r\n              <span>sexes</span>\r\n            ) : (\r\n              <span>only</span>\r\n            )}\r\n          </p>\r\n          <h3>Private Info</h3>\r\n          <p>Email: {model.email}</p>\r\n          <p>Phone Number: {model.phoneNumber1}</p>\r\n          {model.phoneNumber2 && <p>Other Number: {model.phoneNumber2}</p>}\r\n          <p>Whatsapp Number: {model.whatsappNumber}</p>\r\n          <h3>Profile picture:</h3>\r\n          <Image\r\n            src={model.profileImage}\r\n            alt={model.name}\r\n            fluid\r\n            style={{ height: '300px' }}\r\n          />\r\n          <h3>Other pictures:</h3>\r\n          <Row>\r\n            {model.images &&\r\n              model.images.map((img) => (\r\n                <Image\r\n                  src={img}\r\n                  alt={model.name}\r\n                  fluid\r\n                  style={{ height: '300px', marginRight: 20, marginBottom: 20 }}\r\n                />\r\n              ))}\r\n          </Row>\r\n          <h3>Nude pictures:</h3>\r\n          <Row>\r\n            {model.privateImages &&\r\n              model.privateImages.map((img) => (\r\n                <Image\r\n                  src={img}\r\n                  alt={model.name}\r\n                  fluid\r\n                  style={{ height: '300px', marginRight: 20, marginBottom: 20 }}\r\n                />\r\n              ))}\r\n          </Row>\r\n          <h3>Verification picture:</h3>\r\n          <Image\r\n            src={model.verificationImage}\r\n            alt={model.name}\r\n            fluid\r\n            style={{ height: '300px' }}\r\n          />\r\n\r\n          <h3>Reviews</h3>\r\n          {model.reviews.length === 0 && <Message>No Reviews</Message>}\r\n          <ListGroup variant='flush'>\r\n            {model.reviews.map((review) => (\r\n              <ListGroup.Item key={review._id}>\r\n                <strong>{review.name}</strong>\r\n                <Rating value={review.rating} />\r\n                <p>{review.createdAt.substring(0, 10)}</p>\r\n                <p>{review.comment}</p>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n          <h3>Attestation answers</h3>\r\n          <p>\r\n            As a model here, are you willing to have dinner dates and more with\r\n            people who contact you from this platform?<br></br>\r\n            Answer: {model.attestation1}\r\n          </p>\r\n          <p>\r\n            Are you giving us the permission to give your phone number to people\r\n            who find your picture attractive where they can have dinner dates\r\n            with you and more? <br></br>\r\n            Answer: {model.attestation2}\r\n          </p>\r\n          <p>\r\n            Do you understand that it is your job to keep yourself safe by\r\n            making a video call with someone who calls you to verify the person\r\n            is real and meeting in an open place as well as telling close\r\n            friends about your whereabout before going on a date? <br></br>\r\n            Answer: {model.attestation3}\r\n          </p>\r\n          <p>\r\n            Do you understand that as a model here, you are not supposed to take\r\n            things from people if they have not given them to you? <br></br>\r\n            Answer: {model.attestation4}\r\n          </p>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModelAdminScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { listModelDetails, updateModel } from '../actions/modelActions';\r\nimport {\r\n  MODEL_UPDATE_RESET,\r\n  MODEL_DETAILS_RESET,\r\n} from '../constants/modelConstants';\r\n\r\nconst ModelEditScreen = ({ match, history }) => {\r\n  const modelID = match.params.id;\r\n\r\n  // const [username, setUsername] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [isVerified, setIsVerified] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const modelDetails = useSelector((state) => state.modelDetails);\r\n  const { loading, error, model } = modelDetails;\r\n\r\n  const modelUpdate = useSelector((state) => state.modelUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = modelUpdate;\r\n\r\n  //   if (successUpdate) {\r\n  //     dispatch({ type: MODEL_UPDATE_RESET });\r\n  //     dispatch({ type: MODEL_DETAILS_RESET });\r\n  //     history.push('/admin/modellist');\r\n  //   } else {\r\n  //     if (!model.name || model._id !== modelID) {\r\n  //       dispatch(listModelDetails(modelID));\r\n  //     } else {\r\n  //       setUsername(model.username);\r\n  //       setEmail(model.email);\r\n  //       setIsVerified(model.isVerified);\r\n  //     }\r\n  //   }\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: MODEL_UPDATE_RESET });\r\n      dispatch({ type: MODEL_DETAILS_RESET });\r\n      history.push('/admin/modellist');\r\n    } else {\r\n      dispatch(listModelDetails(match.params.id));\r\n      if (model.username) {\r\n        setEmail(model.email);\r\n        setIsVerified(model.isVerified);\r\n      }\r\n    }\r\n  }, [\r\n    match,\r\n    model.username,\r\n    model.email,\r\n    model.isVerified,\r\n    dispatch,\r\n    history,\r\n    successUpdate,\r\n  ]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      updateModel({\r\n        _id: modelID,\r\n        email,\r\n        isVerified,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/modellist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit Model</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            {/* <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter username'\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group> */}\r\n\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='Enter email'\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='isVerified'>\r\n              <Form.Check\r\n                type='checkbox'\r\n                label='Is Verified'\r\n                checked={isVerified}\r\n                onChange={(e) => setIsVerified(e.target.checked)}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModelEditScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { getModelDetails, updateModelProfile } from \"../actions/modelActions\";\r\nimport { MODEL_UPDATE_PROFILE_RESET } from \"../constants/modelConstants\";\r\nimport { CountryDropdown, RegionDropdown } from \"react-country-region-selector\";\r\n\r\nconst ModelEditProfileScreen = ({ history }) => {\r\n  const [message, setMessage] = useState(null);\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const modelDetails = useSelector((state) => state.modelDetails);\r\n  const { loading, error, model } = modelDetails;\r\n\r\n  const modelLogin = useSelector((state) => state.modelLogin);\r\n  const { modelInfo } = modelLogin;\r\n\r\n  const modelUpdateProfile = useSelector((state) => state.modelUpdateProfile);\r\n  const {\r\n    loading: loadingUpdate,\r\n    success: successUpdate,\r\n    error: errorUpdate,\r\n  } = modelUpdateProfile;\r\n\r\n  const [newModel, setNewModel] = useState({\r\n    id: modelInfo._id,\r\n    email: \"\",\r\n    password: \"\",\r\n    gender: \"\",\r\n    country: \"\",\r\n    state: \"\",\r\n    city: \"\",\r\n    states_visited_often: \"\",\r\n    open_to_dinner_dates: \"\",\r\n    DOB: \"\",\r\n    about: \"\",\r\n    minCashGift: \"\",\r\n    phoneNumber1: \"\",\r\n    phoneNumber2: \"\",\r\n    whatsappNumber: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: MODEL_UPDATE_PROFILE_RESET });\r\n      history.push(\"/profile/model\");\r\n    } else {\r\n      if (!modelInfo) {\r\n        history.push(\"/login/model\");\r\n      } else {\r\n        if (!model || !model.username) {\r\n          // dispatch({ type: MODEL_UPDATE_PROFILE_RESET });\r\n          dispatch(getModelDetails(\"profile\"));\r\n        } else {\r\n          setNewModel({\r\n            ...newModel,\r\n            id: modelInfo._id,\r\n            email: model.email,\r\n            gender: model.gender,\r\n            country: model.country,\r\n            state: model.state,\r\n            city: model.city,\r\n            states_visited_often: model.states_visited_often,\r\n            open_to_dinner_dates: model.open_to_dinner_dates,\r\n            DOB: model.DOB,\r\n            about: model.about,\r\n            minCashGift: model.minCashGift,\r\n            phoneNumber1: model.phoneNumber1,\r\n            phoneNumber2: model.phoneNumber2,\r\n            whatsappNumber: model.whatsappNumber,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }, [dispatch, history, modelInfo, model, successUpdate]);\r\n\r\n  const handleChange = (evt) => {\r\n    setNewModel({\r\n      ...newModel,\r\n      [evt.target.name]: evt.target.value,\r\n    });\r\n  };\r\n\r\n  const addToStatesVisited = (state) => {\r\n    setNewModel({\r\n      ...newModel,\r\n      states_visited_often: [\r\n        ...new Set([...newModel.states_visited_often, state]),\r\n      ],\r\n    });\r\n  };\r\n\r\n  const removeFromStatesVisited = (state) => {\r\n    setNewModel({\r\n      ...newModel,\r\n      states_visited_often: [\r\n        ...new Set([...newModel.states_visited_often, state]),\r\n      ].filter((value) => value !== state),\r\n    });\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (newModel.password !== confirmPassword) {\r\n      console.log(newModel.passsword, confirmPassword);\r\n      setMessage(\"Passwords do not match\");\r\n    } else {\r\n      dispatch(updateModelProfile(newModel));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Link className=\"btn btn-success my-3\" to=\"/profile/model/image\">\r\n            Edit Profile Images\r\n          </Link>\r\n          <FormContainer>\r\n            <h1>Update Profile</h1>\r\n            <Form onSubmit={submitHandler}>\r\n              <Message variant=\"warning\">\r\n                Ensure you start with a capital letter on all text fileds\r\n              </Message>\r\n              <Form.Row>\r\n                {/* <Form.Group as={Col} controlId='username'>\r\n                  <Form.Label>Username</Form.Label>\r\n                  <Form.Control\r\n                    type='username'\r\n                    placeholder='Enter username'\r\n                    value={newModel.username}\r\n                    name='username'\r\n                    onChange={handleChange}\r\n                  ></Form.Control>\r\n                  <Form.Text className='text-muted'>\r\n                    Note: you won't be able to change your username in the\r\n                    future\r\n                  </Form.Text>\r\n                </Form.Group> */}\r\n\r\n                <Form.Group as={Col} controlId=\"email\">\r\n                  <Form.Label>Email Address</Form.Label>\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    placeholder=\"Enter email\"\r\n                    value={newModel.email}\r\n                    name=\"email\"\r\n                    onChange={handleChange}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n              </Form.Row>\r\n\r\n              <Form.Row>\r\n                <Form.Group as={Col} controlId=\"password\">\r\n                  <Form.Label>Password</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Enter password\"\r\n                    value={newModel.password}\r\n                    onChange={handleChange}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} controlId=\"confirmPassword\">\r\n                  <Form.Label>Confirm Password</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm password\"\r\n                    value={confirmPassword}\r\n                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n              </Form.Row>\r\n\r\n              <Form.Row>\r\n                <Form.Group as={Col} md=\"6\" controlId=\"gender\">\r\n                  <Form.Label>Gender</Form.Label>\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    value={newModel.gender}\r\n                    name=\"gender\"\r\n                    onChange={handleChange}\r\n                  >\r\n                    <option>Choose...</option>\r\n                    <option value=\"male\">male</option>\r\n                    <option value=\"female\">female</option>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} md=\"6\" controlId=\"DOB\">\r\n                  <Form.Label>Date of birth</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"xx-xx-xxxx\"\r\n                    name=\"DOB\"\r\n                    value={newModel.DOB}\r\n                    onChange={handleChange}\r\n                  ></Form.Control>\r\n                  <Form.Text className=\"text-muted\">\r\n                    Example: 03-03-1998\r\n                  </Form.Text>\r\n                </Form.Group>\r\n              </Form.Row>\r\n\r\n              <Form.Group controlId=\"about\">\r\n                <Form.Label>About you </Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Likes, dislikes, work/school, etc\"\r\n                  name=\"about\"\r\n                  value={newModel.about}\r\n                  onChange={handleChange}\r\n                  as=\"textarea\"\r\n                  rows={3}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Row>\r\n                <Form.Group as={Col} md=\"4\" controlId=\"country\">\r\n                  <Form.Label>Country</Form.Label>\r\n                  <Form.Control\r\n                    as={CountryDropdown}\r\n                    type=\"text\"\r\n                    placeholder=\"Country\"\r\n                    name=\"country\"\r\n                    value={newModel.country}\r\n                    onChange={(val) =>\r\n                      setNewModel({ ...newModel, country: val })\r\n                    }\r\n                  />\r\n                  <Form.Text className=\"text-muted\">Example: Nigeria</Form.Text>\r\n                </Form.Group>\r\n                <Form.Group as={Col} md=\"4\" controlId=\"state\">\r\n                  <Form.Label>State</Form.Label>\r\n                  <Form.Control\r\n                    as={RegionDropdown}\r\n                    country={newModel.country}\r\n                    type=\"text\"\r\n                    defaultOptionLabel={\"Select state\"}\r\n                    placeholder=\"State\"\r\n                    name=\"state\"\r\n                    value={newModel.state}\r\n                    onChange={(val) => setNewModel({ ...model, state: val })}\r\n                  />\r\n                  <Form.Text className=\"text-muted\">Example: Lagos</Form.Text>\r\n                </Form.Group>\r\n                <Form.Group as={Col} md=\"4\" controlId=\"city\">\r\n                  <Form.Label>City</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"City\"\r\n                    name=\"city\"\r\n                    value={newModel.city}\r\n                    onChange={handleChange}\r\n                  />\r\n                  <Form.Text className=\"text-muted\">Example: Ikeja</Form.Text>\r\n                </Form.Group>\r\n              </Form.Row>\r\n\r\n              <Form.Row>\r\n                <Form.Group as={Col} md=\"4\">\r\n                  <Form.Label>States visited often</Form.Label>\r\n                  <Form.Control\r\n                    as={RegionDropdown}\r\n                    country={newModel.country}\r\n                    type=\"text\"\r\n                    defaultOptionLabel={\"Add a State\"}\r\n                    placeholder=\"States visited often\"\r\n                    name=\"states_visited_often\"\r\n                    onChange={(state) => addToStatesVisited(state)}\r\n                  />\r\n                  <Form.Text className=\"text-muted\">Example: Abuja</Form.Text>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} md=\"4\">\r\n                  <Form.Label>Selected States</Form.Label>\r\n                  <Form.Control\r\n                    value={newModel.states_visited_often}\r\n                    readOnly\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} md=\"4\">\r\n                  <Form.Label>States visited often</Form.Label>\r\n                  <Form.Control\r\n                    as={RegionDropdown}\r\n                    country={newModel.country}\r\n                    type=\"text\"\r\n                    defaultOptionLabel={\"Remove a State\"}\r\n                    placeholder=\"States visited often\"\r\n                    name=\"states_visited_often\"\r\n                    onChange={(state) => removeFromStatesVisited(state)}\r\n                  />\r\n                  <Form.Text className=\"text-muted\">\r\n                    Example: {newModel.states_visited_often[0]}\r\n                  </Form.Text>\r\n                </Form.Group>\r\n              </Form.Row>\r\n\r\n              <Form.Group controlId=\"open_to_dinner_dates\">\r\n                <Form.Label>\r\n                  Are you open to have dinner dates with everyone; both male &\r\n                  females\r\n                </Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  name=\"open_to_dinner_dates\"\r\n                  value={newModel.open_to_dinner_dates}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option>Choose...</option>\r\n                  <option value=\"Both\">Both</option>\r\n                  <option value=\"Male\">Male only</option>\r\n                  <option value=\"Female\">Female only</option>\r\n                </Form.Control>\r\n                <Form.Text className=\"text-muted\">\r\n                  Please note, males are usually the ones who pay for anything\r\n                  with you while females are usually the ones who want you for\r\n                  free\r\n                </Form.Text>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"minCashGift\">\r\n                <Form.Label>\r\n                  As a model here, you can only accept cash gifts above what?\r\n                </Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  placeholder=\"Minimum cash gift\"\r\n                  name=\"minCashGift\"\r\n                  value={newModel.minCashGift}\r\n                  onChange={handleChange}\r\n                />\r\n                <Form.Text className=\"text-muted\">\r\n                  Number only! For example: if the minimum you'll accept is\r\n                  N5,000 insert 5000\r\n                </Form.Text>\r\n              </Form.Group>\r\n\r\n              <h3>Private Information</h3>\r\n              <p>\r\n                This would only be shared with people who can afford your time\r\n              </p>\r\n\r\n              <Form.Group controlId=\"phoneNumber1\">\r\n                <Form.Label>Phone number 1</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  placeholder=\"phoneNumber1\"\r\n                  name=\"phoneNumber1\"\r\n                  value={newModel.phoneNumber1}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"phoneNumber2\">\r\n                <Form.Label>Phone number 2</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  placeholder=\"phoneNumber2\"\r\n                  name=\"phoneNumber2\"\r\n                  value={newModel.phoneNumber2}\r\n                  onChange={handleChange}\r\n                />\r\n                <Form.Text className=\"text-muted\">\r\n                  leave blank if none\r\n                </Form.Text>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"whatsappNumber\">\r\n                <Form.Label>Whatsapp number </Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  placeholder=\"whatsappNumber\"\r\n                  name=\"whatsappNumber\"\r\n                  value={newModel.whatsappNumber}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Group>\r\n\r\n              {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n              {loadingUpdate && <Loader />}\r\n              {message && <Message variant=\"danger\">{message}</Message>}\r\n\r\n              <Button type=\"submit\" variant=\"primary\">\r\n                Update\r\n              </Button>\r\n            </Form>\r\n          </FormContainer>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModelEditProfileScreen;\r\n","import axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { getModelDetails, updateModelProfile } from '../actions/modelActions';\r\nimport {\r\n  MODEL_UPDATE_PROFILE_RESET,\r\n  MODEL_DETAILS_RESET,\r\n} from '../constants/modelConstants';\r\n\r\nconst ModelEditImagesScreen = ({ history }) => {\r\n  const modelDetails = useSelector((state) => state.modelDetails);\r\n  const { loading, error, model } = modelDetails;\r\n\r\n  const modelLogin = useSelector((state) => state.modelLogin);\r\n  const { modelInfo } = modelLogin;\r\n\r\n  const modelUpdateProfile = useSelector((state) => state.modelUpdateProfile);\r\n  const {\r\n    loading: loadingUpdate,\r\n    success: successUpdate,\r\n    error: errorUpdate,\r\n  } = modelUpdateProfile;\r\n\r\n  const [upload, setUpload] = useState({\r\n    profileImage: '',\r\n    verificationImage: '',\r\n    image1: '',\r\n    image2: '',\r\n    image3: '',\r\n    image4: '',\r\n    image5: '',\r\n    privateImage1: '',\r\n    privateImage2: '',\r\n  });\r\n\r\n  const newModel = {\r\n    id: modelInfo._id,\r\n    images: [\r\n      upload.image1,\r\n      upload.image2,\r\n      upload.image3,\r\n      upload.image4,\r\n      upload.image5,\r\n    ],\r\n    privateImages: [upload.privateImage1, upload.privateImage2],\r\n    profileImage: upload.profileImage,\r\n    verificationImage: upload.verificationImage,\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: MODEL_UPDATE_PROFILE_RESET });\r\n      dispatch({ type: MODEL_DETAILS_RESET });\r\n      history.push('/profile/model');\r\n    } else {\r\n      if (!modelInfo) {\r\n        history.push('/login/model');\r\n      } else {\r\n        if (!model || !model.username) {\r\n          dispatch(getModelDetails('profile'));\r\n        } else {\r\n          setUpload({\r\n            profileImage: model.profileImage,\r\n            verificationImage: model.verificationImage,\r\n            image1: model.images[0],\r\n            image2: model.images[1],\r\n            image3: model.images[2],\r\n            image4: model.images[3],\r\n            image5: model.images[4],\r\n            privateImage1: model.privateImages[0],\r\n            privateImage2: model.privateImages[1],\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }, [dispatch, history, modelInfo, model, successUpdate]);\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const name = e.target.name;\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append('image', file);\r\n    formData.append(\"name\", name);\r\n    formData.append(\"model\", model);\r\n    formData.append(\"id\", model._id);\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post('/api/upload', formData, config);\r\n\r\n      setUpload({\r\n        ...upload,\r\n        [e.target.name]: data,\r\n      });\r\n      console.log(upload);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateModelProfile(newModel));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <FormContainer>\r\n          <h1>Edit Images</h1>\r\n          {error && <Message variant='danger'>{error}</Message>}\r\n          {loading && <Loader />}\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>Profile picture</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                value={upload.profileImage}\r\n              ></Form.Control>\r\n              <Form.File\r\n                name='profileImage'\r\n                id='image-file'\r\n                label='Choose File'\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n              <Form.Text className='text-muted'>\r\n                Note: This is the picture that will be displayed in the home\r\n                page\r\n              </Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>Full picture of you standing</Form.Label>\r\n              <Form.Control type='text' value={upload.image1}></Form.Control>\r\n              <Form.File\r\n                id='image-file'\r\n                name='image1'\r\n                label='Choose File'\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>Full picture of you wearing clothes</Form.Label>\r\n              <Form.Control type='text' value={upload.image2}></Form.Control>\r\n              <Form.File\r\n                id='image-file'\r\n                name='image2'\r\n                label='Choose File'\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>Full picture of you shirtless</Form.Label>\r\n              <Form.Control type='text' value={upload.image3}></Form.Control>\r\n              <Form.File\r\n                name='image3'\r\n                id='image-file'\r\n                label='Choose File'\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>Random sexy pictures of you </Form.Label>\r\n              <Form.Control type='text' value={upload.image4}></Form.Control>\r\n              <Form.File\r\n                id='image-file'\r\n                name='image4'\r\n                label='Choose File'\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>Another random sexy pictures of you </Form.Label>\r\n              <Form.Control type='text' value={upload.image5}></Form.Control>\r\n              <Form.File\r\n                id='image-file'\r\n                name='image5'\r\n                label='Choose File'\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>Nude/semi nude picture of you 1</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                value={upload.privateImage1}\r\n              ></Form.Control>\r\n              <Form.File\r\n                id='image-file'\r\n                name='privateImage1'\r\n                label='Choose File'\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n              <Form.Text className='text-muted'>\r\n                Note: Don’t use fake nudes, we would catch you!\r\n              </Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>Nude/semi nude picture of you 2</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                value={upload.privateImage2}\r\n              ></Form.Control>\r\n              <Form.File\r\n                id='image-file'\r\n                name='privateImage2'\r\n                label='Choose File'\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n              <Form.Text className='text-muted'>\r\n                Note: Don’t use fake nudes, we would catch you!\r\n              </Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>Verified picture of you </Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                value={upload.verificationImage}\r\n              ></Form.Control>\r\n              <Form.File\r\n                id='image-file'\r\n                name='verificationImage'\r\n                label='Choose File'\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n              <Form.Text className='text-muted'>\r\n                write dinner with models on a paper and Take a selfie with it.\r\n                It would not be shared\r\n              </Form.Text>\r\n            </Form.Group>\r\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n            {loadingUpdate && <Loader />}\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        </FormContainer>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModelEditImagesScreen;\r\n","import React, { useState } from \"react\";\r\nimport { Form, Container, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createPlan } from \"../actions/paymentActions\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\n\r\nconst AddPlanScreen = ({ history }) => {\r\n  const [plan, setPlan] = useState({\r\n    name: \"\",\r\n    amount: \"\",\r\n    interval: \"\",\r\n  });\r\n  const dispatch = useDispatch();\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error } = userDetails;\r\n  //   const {\r\n  //     userLogin: { userInfo },\r\n  //   } = useSelector((state) => state.userLogin);\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setPlan((prevValue) => {\r\n      return { ...prevValue, [name]: value };\r\n    });\r\n  };\r\n\r\n  const addPlan = (e) => {\r\n    dispatch(createPlan(plan));\r\n    history.push(\"/admin/plans\");\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <h2>Create Plan</h2>\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form>\r\n        <Form.Group>\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            onChange={handleChange}\r\n            name=\"name\"\r\n            type=\"text\"\r\n            placeholder=\"Enter Plan Name\"\r\n            value={plan.name}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>\r\n            Amount(Amount should be in kobo if currency is NGN and pesewas for\r\n            GHS)\r\n          </Form.Label>\r\n          <Form.Control\r\n            onChange={handleChange}\r\n            name=\"amount\"\r\n            type=\"number\"\r\n            placeholder=\"Enter Plan Amount\"\r\n            value={plan.amount}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Interval</Form.Label>\r\n          <Form.Control\r\n            onChange={handleChange}\r\n            name=\"interval\"\r\n            as=\"select\"\r\n            value={plan.interval}\r\n          >\r\n            <option value=\"\">pick the plan interval ...</option>\r\n            <option value=\"hourly\">Hourly</option>\r\n            <option value=\"daily\">Daily</option>\r\n            <option value=\"weekly\">Weekly</option>\r\n            <option value=\"monthly\">Monthly</option>\r\n            <option value=\"biannually\">Bi-Annually</option>\r\n            <option value=\"annually\">Annually</option>\r\n          </Form.Control>\r\n        </Form.Group>\r\n        <Button className=\"btn-md btn-dark\" onClick={addPlan}>\r\n          Create Plan\r\n        </Button>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AddPlanScreen;\r\n","import React, { useEffect } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { deletePlan, listPlans } from \"../actions/paymentActions\";\r\n\r\nconst PlanListScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const planList = useSelector((state) => state.planList);\r\n  const { loading, error, plans } = planList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listPlans());\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [dispatch, userInfo, history]);\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm(\"Are you sure?\")) {\r\n      dispatch(deletePlan(id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Plans</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className=\"table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>AMOUNT(Kobos)</th>\r\n              <th>INTERVAL</th>\r\n              <th>PLAN CODE</th>\r\n              <th>CURRENCY</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {plans.map((plan) => (\r\n              <tr key={plan._id}>\r\n                <td>{plan._id}</td>\r\n                <td>{plan.name}</td>\r\n                <td>{plan.amount}</td>\r\n                <td>{plan.interval}</td>\r\n                <td>{plan.planCode}</td>\r\n                <td>{plan.currency}</td>\r\n                <td>\r\n                  <LinkContainer to={`/admin/plans/${plan._id}/edit`}>\r\n                    <Button variant=\"light\" className=\"btn-sm\">\r\n                      <i className=\"fas fa-edit\"></i>\r\n                    </Button>\r\n                  </LinkContainer>\r\n                  <Button\r\n                    variant=\"danger\"\r\n                    className=\"btn-sm\"\r\n                    onClick={() => deleteHandler(plan._id)}\r\n                  >\r\n                    <i className=\"fas fa-trash\"></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n      <LinkContainer to={`/admin/plans/add`}>\r\n        <Button variant=\"dark\" className=\"btn-sm\">\r\n          Create a new Plan\r\n        </Button>\r\n      </LinkContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlanListScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getPlanDetails, updatePlan } from \"../actions/paymentActions\";\r\n\r\nconst PlanEditScreen = ({ match, history }) => {\r\n  const planId = match.params.id;\r\n  const [plan, setPlan] = useState({\r\n    name: \"\",\r\n    amount: \"\",\r\n    interval: \"\",\r\n    planCode: \"\",\r\n    currency: \"\",\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const planDetails = useSelector((state) => state.planDetails);\r\n  const { loading, error, plan: planDetail } = planDetails;\r\n\r\n  const planUpdate = useSelector((state) => state.planUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = planUpdate;\r\n\r\n  useEffect(() => {\r\n      if (successUpdate) {\r\n          history.push(\"/admin/plans\");\r\n      } else {\r\n          if (!planDetail.name || planDetail._id !== planId) {\r\n              dispatch(getPlanDetails(planId));\r\n          } else {\r\n              setPlan(planDetail);\r\n          }\r\n      }\r\n  }, [dispatch, history, planId, successUpdate, planDetail]);\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setPlan((prevValue) => {\r\n      return { ...prevValue, [name]: value };\r\n    });\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    dispatch(updatePlan(plan));\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Link to=\"/admin/plans\" className=\"btn btn-light\">\r\n          Go Back\r\n      </Link>\r\n      <FormContainer>\r\n          <h1>Edit Plan</h1>\r\n          {loadingUpdate && <Loader />}\r\n          {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n          {loading ? (\r\n              <Loader />\r\n          ) : error ? (\r\n              <Message variant=\"danger\">{error}</Message>\r\n          ) : (\r\n            <Form>\r\n        <Form.Group>\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            onChange={handleChange}\r\n            name=\"name\"\r\n            type=\"text\"\r\n            placeholder=\"Enter Plan Name\"\r\n            value={plan.name}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Amount(Amount should be in kobo if currency is NGN and pesewas for\r\n            GHS)</Form.Label>\r\n          <Form.Control\r\n            onChange={handleChange}\r\n            name=\"amount\"\r\n            type=\"number\"\r\n            placeholder=\"Enter Plan Amount\"\r\n            value={plan.amount}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Interval</Form.Label>\r\n          <Form.Control\r\n            onChange={handleChange}\r\n            name=\"interval\"\r\n            type=\"text\"\r\n            placeholder=\"Enter Plan Name\"\r\n            value={plan.interval}\r\n            readOnly\r\n          />\r\n        </Form.Group>\r\n        <Button className=\"btn-md btn-dark\" onClick={submitHandler}>\r\n          Update Plan\r\n        </Button>\r\n      </Form>\r\n          )}\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlanEditScreen;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Form, Container, Button } from \"react-bootstrap\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport { verifyTransaction } from \"../actions/paymentActions\";\r\n\r\nconst VerifyTransactionScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const [referenceNumber, setReferenceNumber] = useState(\"\");\r\n\r\n  const verifyDetails = useSelector((state) => state.verifyTransaction);\r\n  const { loading, error, details } = verifyDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const handleChange = (event) => {\r\n    const { value } = event.target;\r\n    setReferenceNumber(value);\r\n  };\r\n\r\n  const verify = (e) => {\r\n    dispatch(verifyTransaction(referenceNumber));\r\n    e.preventDefault();\r\n  };\r\n\r\n  if (!userInfo || !userInfo.isAdmin) {\r\n    history.push(\"/login\");\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      {details ? (\r\n        <>\r\n          <h1>Transaction Details</h1>\r\n          <p><strong>Amount:</strong> {details.currency} {details.amount/100}</p>\r\n          <p><strong>Date:</strong> {details.transaction_date}</p>\r\n          <p><strong>Reference Number:</strong> {details.reference}</p>\r\n          <p><strong>Customer Email:</strong> {details.customer.email}</p>\r\n          {details.plan && details.plan.plan_code && (\r\n            <>\r\n              <p><strong>Plan Code:</strong> {details.plan.plan_code}</p>\r\n              <p><strong>Plan Name:</strong> {details.plan.name}</p>\r\n              <p><strong>Plan Interval:</strong> {details.plan.interval}</p>\r\n            </>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h2>Verify a Transaction</h2>\r\n          {error && <Message variant=\"danger\">{error}</Message>}\r\n          {loading && <Loader />}\r\n          <Form>\r\n            <Form.Group>\r\n              <Form.Label>Transaction Reference Number</Form.Label>\r\n              <Form.Control\r\n                onChange={handleChange}\r\n                name=\"ref\"\r\n                type=\"text\"\r\n                placeholder=\"n2qd5mvtxfd1gtc\"\r\n                value={referenceNumber}\r\n              />\r\n            </Form.Group>\r\n            <Button className=\"btn-md btn-dark\" onClick={verify}>\r\n              Verify\r\n            </Button>\r\n          </Form>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default VerifyTransactionScreen;\r\n","import React, { useEffect } from 'react';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Image, Button, Table } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { deleteCarousel, listCarousels } from '../actions/carouselActions';\r\n\r\nconst CarouselListScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const carouselList = useSelector((state) => state.carouselList);\r\n  const { loading, error, carousels } = carouselList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listCarousels());\r\n    } else {\r\n      history.push('/login');\r\n    }\r\n  }, [dispatch, userInfo, history]);\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure?')) {\r\n      dispatch(deleteCarousel(id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Carousels</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>TEXT</th>\r\n              <th>IMAGE</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {carousels.map((carousel) => (\r\n              <tr key={carousel._id}>\r\n                <td>{carousel._id}</td>\r\n                <td>{carousel.name}</td>\r\n                <td>{carousel.text}</td>\r\n                <td>\r\n                  <Image\r\n                    src={carousel.image}\r\n                    alt={carousel.name}\r\n                    fluid\r\n                    style={{\r\n                      height: '50px',\r\n                      width: '50px',\r\n                    }}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/admin/carousels/${carousel._id}/edit`}>\r\n                    <Button variant='light' className='btn-sm'>\r\n                      <i className='fas fa-edit'></i>\r\n                    </Button>\r\n                  </LinkContainer>\r\n                  <Button\r\n                    variant='danger'\r\n                    className='btn-sm'\r\n                    onClick={() => deleteHandler(carousel._id)}\r\n                  >\r\n                    <i className='fas fa-trash'></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n      <Link to={`/admin/carousel/add`}>\r\n        <Button variant='dark' className='btn-sm'>\r\n          Create a new Carousel\r\n        </Button>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CarouselListScreen;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Form, Container, Button } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { createCarousel } from \"../actions/carouselActions\";\r\n\r\nconst AddCarouselScrren = ({ history }) => {\r\n  const [carousel, setCarousel] = useState({\r\n    name: \"\",\r\n    image: \"\",\r\n    text: \"\",\r\n  });\r\n  const dispatch = useDispatch();\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error } = userDetails;\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setCarousel((prevValue) => {\r\n      return { ...prevValue, [name]: value };\r\n    });\r\n  };\r\n\r\n  const addCarousel = (e) => {\r\n    dispatch(createCarousel(carousel));\r\n    history.push(\"/admin/carousel\");\r\n    e.preventDefault();\r\n  };\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append(\"image\", file);\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\"/api/upload\", formData, config);\r\n\r\n      setCarousel({\r\n        ...carousel,\r\n        [e.target.name]: data,\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <h2>Create Home Page Carousel</h2>\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form>\r\n        <Form.Group>\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            onChange={handleChange}\r\n            name=\"name\"\r\n            type=\"text\"\r\n            placeholder=\"Enter a name for your Carousel\"\r\n            value={carousel.name}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Text</Form.Label>\r\n          <Form.Control\r\n            onChange={handleChange}\r\n            name=\"text\"\r\n            type=\"text\"\r\n            placeholder=\"Enter Carousel Text to be displayed\"\r\n            value={carousel.text}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Carousel Image</Form.Label>\r\n          <Form.Control type=\"text\" value={carousel.image}></Form.Control>\r\n          <Form.File\r\n            name=\"image\"\r\n            label=\"Choose File\"\r\n            custom\r\n            onChange={uploadFileHandler}\r\n          />\r\n        </Form.Group>\r\n        <Button className=\"btn-md btn-dark\" onClick={addCarousel}>\r\n          Create Carousel\r\n        </Button>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AddCarouselScrren;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getCarouselDetails, updateCarousel } from \"../actions/carouselActions\";\r\nimport axios from \"axios\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport FormContainer from \"../components/FormContainer\";\r\n\r\nconst CarouselEditScreen = ({ match, history }) => {\r\n  const carouselId = match.params.id;\r\n  const [carousel, setCarousel] = useState({\r\n    name: \"\",\r\n    text: \"\",\r\n    image: \"\",\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const carouselDetails = useSelector((state) => state.carouselDetails);\r\n  const { loading, error, carousel: carouselDetail } = carouselDetails;\r\n\r\n  const carouselUpdate = useSelector((state) => state.carouselUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = carouselUpdate;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      history.push(\"/admin/carousel\");\r\n    } else {\r\n      if (!carouselDetail.name || carouselDetail._id !== carouselId) {\r\n        dispatch(getCarouselDetails(carouselId));\r\n      } else {\r\n        setCarousel(carouselDetail);\r\n      }\r\n    }\r\n  }, [dispatch, history, carouselId, successUpdate, carouselDetail]);\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setCarousel((prevValue) => {\r\n      return { ...prevValue, [name]: value };\r\n    });\r\n  };\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append(\"image\", file);\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\"/api/upload\", formData, config);\r\n\r\n      setCarousel({\r\n        ...carousel,\r\n        [e.target.name]: data,\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    dispatch(updateCarousel(carousel));\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Link to=\"/admin/carousel\" className=\"btn btn-light\">\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h2>Edit Carousel</h2>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <Form>\r\n            <Form.Group>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                onChange={handleChange}\r\n                name=\"name\"\r\n                type=\"text\"\r\n                placeholder=\"Enter a name for your Carousel\"\r\n                value={carousel.name}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Text</Form.Label>\r\n              <Form.Control\r\n                onChange={handleChange}\r\n                name=\"text\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Carousel Text to be displayed\"\r\n                value={carousel.text}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Carousel Image</Form.Label>\r\n              <Form.Control type=\"text\" value={carousel.image}></Form.Control>\r\n              <Form.File\r\n                name=\"image\"\r\n                label=\"Choose File\"\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              />\r\n            </Form.Group>\r\n            <Button className=\"btn-md btn-dark\" onClick={submitHandler}>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CarouselEditScreen;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport Header from \"./components/Header\";\r\nimport Footer from \"./components/Footer\";\r\nimport HomeScreen from \"./screens/HomeScreen\";\r\nimport ModelScreen from \"./screens/ModelScreen\";\r\nimport LoginScreen from \"./screens/LoginScreen\";\r\nimport ModelLoginScreen from \"./screens/ModelLoginScreen\";\r\nimport RegisterScreen from \"./screens/RegisterScreen\";\r\nimport ModelRegisterScreen from \"./screens/ModelRegisterScreen\";\r\nimport ModelRegisterScreen3 from \"./screens/ModelRegisterScreen3\";\r\nimport ProfileScreen from \"./screens/ProfileScreen\";\r\nimport ModelProfileScreen from \"./screens/ModelProfileScreen\";\r\nimport SubscriptionScreen from \"./screens/SubscriptionScreen\";\r\nimport PaymentScreen from \"./screens/PaymentScreen\";\r\nimport UserListScreen from \"./screens/UserListScreen\";\r\nimport UserEditScreen from \"./screens/UserEditScreen\";\r\nimport ModelListScreen from \"./screens/ModelListScreen\";\r\nimport ModelAdminScreen from \"./screens/ModelAdminScreen\";\r\nimport ModelEditScreen from \"./screens/ModelEditScreen\";\r\nimport ModelEditProfileScreen from \"./screens/ModelEditProfileScreen\";\r\nimport ModelEditImagesScreen from \"./screens/ModelEditImagesScreen\";\r\nimport AddPlanScreen from \"./screens/AddPlanScreen\";\r\nimport PlanListScreen from \"./screens/PlanListScreen\";\r\nimport PlanEditScreen from \"./screens/PlanEditScreen\";\r\nimport VerifyTransactionScreen from \"./screens/VerifyTransactionScreen\";\r\nimport CarouselListScreen from \"./screens/CarouselListScreen\";\r\nimport AddCarouselScrren from \"./screens/AddCarouselScreen\";\r\nimport CarouselEditScreen from \"./screens/CarouselEditScreen\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <main className=\"py-3\">\r\n        <Container>\r\n          <Route path=\"/login\" component={LoginScreen} exact />\r\n          <Route path=\"/register\" component={RegisterScreen} exact />\r\n          <Route path=\"/pay/:id\" component={PaymentScreen} exact />\r\n          <Route path=\"/subscribe\" component={SubscriptionScreen} exact />\r\n          <Route path=\"/profile\" component={ProfileScreen} exact />\r\n          <Route path=\"/login/model\" component={ModelLoginScreen} exact />\r\n          <Route path=\"/register/model\" component={ModelRegisterScreen} exact />\r\n          <Route\r\n            path=\"/register/model/3\"\r\n            component={ModelRegisterScreen3}\r\n            exact\r\n          />\r\n          <Route path=\"/profile/model\" component={ModelProfileScreen} exact />\r\n          <Route\r\n            path=\"/profile/model/edit\"\r\n            component={ModelEditProfileScreen}\r\n            exact\r\n          />\r\n          <Route\r\n            path=\"/profile/model/image\"\r\n            component={ModelEditImagesScreen}\r\n            exact\r\n          />\r\n          <Route path=\"/model/:id\" component={ModelScreen} exact />\r\n          <Route path=\"/admin/plans\" component={PlanListScreen} exact />\r\n          <Route path=\"/admin/plans/add\" component={AddPlanScreen} exact />\r\n          <Route\r\n            path=\"/admin/plans/:id/edit\"\r\n            component={PlanEditScreen}\r\n            exact\r\n          />\r\n          <Route path=\"/admin/carousel\" component={CarouselListScreen} exact />\r\n          <Route path=\"/admin/carousel/add\" component={AddCarouselScrren} exact />\r\n          <Route path=\"/admin/carousel/:id/edit\" component={CarouselEditScreen} exact/>\r\n          <Route path=\"/admin/verifyTransaction\" component={VerifyTransactionScreen} exact />\r\n          <Route path=\"/admin/userlist\" component={UserListScreen} exact />\r\n          <Route path=\"/admin/user/:id/edit\" component={UserEditScreen} />\r\n          <Route path=\"/admin/modellist\" component={ModelListScreen} exact />\r\n          <Route path=\"/admin/model/:id\" component={ModelAdminScreen} exact />\r\n          <Route\r\n            path=\"/admin/modellist/:pageNumber\"\r\n            component={ModelListScreen}\r\n            exact\r\n          />\r\n          <Route path=\"/admin/model/:id/edit\" component={ModelEditScreen} />\r\n          <Route\r\n            path=\"/search/:keyword/page/:pageNumber\"\r\n            component={HomeScreen}\r\n            exact\r\n          />\r\n          <Route path=\"/search/:keyword\" component={HomeScreen} exact />\r\n          <Route\r\n            path=\"/gender/:gender/page/:pageNumber\"\r\n            component={HomeScreen}\r\n            exact\r\n          />\r\n          <Route path=\"/gender/:gender\" component={HomeScreen} exact />\r\n          <Route path=\"/page/:pageNumber\" component={HomeScreen} exact />\r\n          <Route path=\"/\" component={HomeScreen} exact />\r\n        </Container>\r\n      </main>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}